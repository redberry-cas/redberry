/*
 * Redberry: symbolic tensor computations.
 *
 * Copyright (c) 2010-2015:
 *   Stanislav Poslavsky   <stvlpos@mail.ru>
 *   Bolotin Dmitriy       <bolotin.dmitriy@gmail.com>
 *
 * This file is part of Redberry.
 *
 * Redberry is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Redberry is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Redberry. If not, see <http://www.gnu.org/licenses/>.
 */
package cc.redberry.physics.feyncalc;

import cc.redberry.core.TAssert;
import cc.redberry.core.context.CC;
import cc.redberry.core.context.OutputFormat;
import cc.redberry.core.indices.IndexType;
import cc.redberry.core.parser.preprocessor.GeneralIndicesInsertion;
import cc.redberry.core.tensor.Tensor;
import cc.redberry.core.transformations.Transformation;
import cc.redberry.core.transformations.TransformationCollection;
import org.junit.Before;
import org.junit.Test;

import static cc.redberry.core.tensor.Tensors.*;
import static cc.redberry.core.transformations.ExpandAndEliminateTransformation.EXPAND_AND_ELIMINATE;
import static cc.redberry.core.transformations.ExpandAndEliminateTransformation.expandAndEliminate;

/**
 * Created by poslavsky on 07/08/15.
 */
public class DiracSimplify0Test {
    @Before
    public void setUp() throws Exception {
        CC.reset();
    }

    @Test
    public void test1() throws Exception {
        CC.setDefaultOutputFormat(OutputFormat.SimpleRedberry);
        GeneralIndicesInsertion indicesInsertion = new GeneralIndicesInsertion();
        CC.current().getParseManager().defaultParserPreprocessors.add(indicesInsertion);
        indicesInsertion.addInsertionRule(parseSimple("G^a'_b'a"), IndexType.Matrix1);
        indicesInsertion.addInsertionRule(parseSimple("G5^a'_b'"), IndexType.Matrix1);

        DiracSimplify0 ds = new DiracSimplify0(parseSimple("G_a"), parse("4"), parse("4"), EXPAND_AND_ELIMINATE);

        Tensor t;
        t = parse("G_a*G_b*G_c*k^a*k^b");
        assertEquals("k_a*k^a*G_c", ds.transform(t));

        t = parse("2*G_a*G_b*G_c*k^a*k^b");
        assertEquals("2*k_a*k^a*G_c", ds.transform(t));

        t = parse("2*a*G_a*G_b*G_c*k^a*k^b");
        assertEquals("2*a*k_a*k^a*G_c", ds.transform(t));

        t = parse("2*a*G_c*G_a*G_b*k^a*k^b");
        assertEquals("2*a*k_a*k^a*G_c", ds.transform(t));

        t = parse("G_a*G_b*k^a*k^b");
        assertEquals("k_a*k^a*d^a'_b'", ds.transform(t));
    }

    @Test
    public void test2() throws Exception {
        CC.setDefaultOutputFormat(OutputFormat.SimpleRedberry);
        GeneralIndicesInsertion indicesInsertion = new GeneralIndicesInsertion();
        CC.current().getParseManager().defaultParserPreprocessors.add(indicesInsertion);
        indicesInsertion.addInsertionRule(parseSimple("G^a'_b'a"), IndexType.Matrix1);
        indicesInsertion.addInsertionRule(parseSimple("G5^a'_b'"), IndexType.Matrix1);

        DiracSimplify0 ds = new DiracSimplify0(parseSimple("G_a"), parse("4"), parse("4"), EXPAND_AND_ELIMINATE);

        Tensor t;
        t = parse("G_a*G_c*G_b*k^a*k^b");
        assertEquals("2*G_{b}*k^{b}*k_{c}-G_{c}*k^{b}*k_{b}", ds.transform(t));

        t = parse("G_d*G_a*G_c*G_b*k^a*k^b");
        assertEquals("2*G_d*G_{b}*k^{b}*k_{c}-G_d*G_{c}*k^{b}*k_{b}", ds.transform(t));

        t = parse("G_d*G_a*G_c*G_b*G_e*k^a*k^b");
        assertEquals("2*G_d*G_{b}*G_e*k^{b}*k_{c}-G_d*G_{c}*G_e*k^{b}*k_{b}", ds.transform(t));

        t = parse("G_a*G_c*G_b*q^a*k^b");
        TAssert.assertTrue(t == ds.transform(t));

        t = parse("G_a*G_c*G_b*(k^a + q^a)*(k^b + q^b)");
        TAssert.assertTrue(t == ds.transform(t));
    }

    @Test
    public void test3() throws Exception {
        CC.setDefaultOutputFormat(OutputFormat.SimpleRedberry);
        GeneralIndicesInsertion indicesInsertion = new GeneralIndicesInsertion();
        CC.current().getParseManager().defaultParserPreprocessors.add(indicesInsertion);
        indicesInsertion.addInsertionRule(parseSimple("G^a'_b'a"), IndexType.Matrix1);
        indicesInsertion.addInsertionRule(parseSimple("G5^a'_b'"), IndexType.Matrix1);

        DiracSimplify0 ds = new DiracSimplify0(parseSimple("G_a"), parse("4"), parse("4"), EXPAND_AND_ELIMINATE);

        Tensor t;
        t = parse("G_a*G^c*G^d*G_b*k^a*k^b");
        assertEquals("2*k^c*G^d*G_i*k^i-2*k^d*G^c*G_i*k^i+k_i*k^i*G^c*G^d", ds.transform(t));

        t = parse("G_d*G_a*G_c*G_b*k^a*k^b");
        assertEquals("2*G_d*G_{b}*k^{b}*k_{c}-G_d*G_{c}*k^{b}*k_{b}", ds.transform(t));

        t = parse("G_d*G_a*G_c*G_b*G_e*k^a*k^b");
        assertEquals("2*G_d*G_{b}*G_e*k^{b}*k_{c}-G_d*G_{c}*G_e*k^{b}*k_{b}", ds.transform(t));

        t = parse("G_a*G_c*G_b*q^a*k^b");
        TAssert.assertTrue(t == ds.transform(t));

        t = parse("G_a*G_c*G_b*(k^a + q^a)*(k^b + q^b)");
        TAssert.assertTrue(t == ds.transform(t));
    }

    @Test
    public void test4() throws Exception {
        CC.setDefaultOutputFormat(OutputFormat.SimpleRedberry);
        GeneralIndicesInsertion indicesInsertion = new GeneralIndicesInsertion();
        CC.current().getParseManager().defaultParserPreprocessors.add(indicesInsertion);
        indicesInsertion.addInsertionRule(parseSimple("G^a'_b'a"), IndexType.Matrix1);
        indicesInsertion.addInsertionRule(parseSimple("G5^a'_b'"), IndexType.Matrix1);

        DiracSimplify0 ds = new DiracSimplify0(parseSimple("G_a"), parse("4"), parse("4"), EXPAND_AND_ELIMINATE);

        Tensor t;
        t = parse("G_a*G_b*G_c*G_d*q^a*q^b*k^c*k^d");
        assertEquals("q_a*q^a*k_b*k^b*d^a'_b'", ds.transform(t));

        t = parse("G_a*G_c*G_b*G_d*q^a*q^b*k^c*k^d");
        assertEquals("2*G_{b}*q^{b}*G_{d}*k^{d}*k^{c}*q_{c}-k^{d}*k_{d}*q^{b}*q_{b}", ds.transform(t));

        t = parse("G^a*q_a*G^b*k_b*G^c*p_c*G^d*q_d*G^e*k_e*G^f*p_f");
        assertEquals("-4*G^a*q_a*G^b*p_b*k^c*k^d*p_c*q_d+2*G^e*q_e*G^f*k_f*k^h*p_g*p^g*q_h+2*G^j*q_j*G^k*p_k*k_l*k^l*p^m*q_m+2*G^o*k_o*G^p*p_p*k^q*p_q*q_s*q^s-k_t*k^t*p_u*p^u*q_v*q^v", ds.transform(t));

        t = parse("G^a*p_a*G^b*q_b*G^c*k_c*G^d*q_d*G^e*p_e*G^f*k_f");
        assertEquals("-2*G^a*q_a*G^b*k_b*k^d*p_c*p^c*q_d+4*G^e*p_e*G^f*k_f*k^g*p^h*q_g*q_h-2*G^j*p_j*G^k*k_k*k^l*p_l*q_m*q^m+k_o*k^o*p_p*p^p*q_q*q^q", ds.transform(t));
    }

    @Test
    public void test5() throws Exception {
        CC.setDefaultOutputFormat(OutputFormat.SimpleRedberry);
        GeneralIndicesInsertion indicesInsertion = new GeneralIndicesInsertion();
        CC.current().getParseManager().defaultParserPreprocessors.add(indicesInsertion);
        indicesInsertion.addInsertionRule(parseSimple("G^a'_b'a"), IndexType.Matrix1);
        indicesInsertion.addInsertionRule(parseSimple("G5^a'_b'"), IndexType.Matrix1);

        DiracSimplify0 ds = new DiracSimplify0(parseSimple("G_a"), parse("4"), parse("4"), EXPAND_AND_ELIMINATE);

        Tensor t;

        t = parse("G^a*p_a*G^b*q_b*G^c*k_c*G^d*p_d*G^e*k_e*G^f*q_f");
        assertEquals("4*G^a*p_a*G^b*q_b*k^c*k^d*p_c*q_d-2*G^e*p_e*G^f*q_f*k_g*k^g*p^h*q_h-2*G^j*p_j*G^k*k_k*k^l*p_l*q_m*q^m+k_o*k^o*p_p*p^p*q_q*q^q", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*k_c*G^d*p_d*G^e*q_e*G^f*k_f");
        assertEquals("2*G^a*q_a*G^b*k_b*k^d*p_c*p^c*q_d+2*G^e*p_e*G^f*q_f*k_g*k^g*p^h*q_h-4*G^j*p_j*G^k*k_k*k^l*p^m*q_l*q_m+2*G^o*p_o*G^p*k_p*k^q*p_q*q_s*q^s-k_t*k^t*p_u*p^u*q_v*q^v", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*k_c*G^d*k_d*G^e*p_e*G^f*q_f");
        assertEquals("2*G^a*p_a*G^b*q_b*k_c*k^c*p^d*q_d-k_e*k^e*p_f*p^f*q_g*q^g", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*k_c*G^d*k_d*G^e*q_e*G^f*p_f");
        assertEquals("k_a*k^a*p_b*p^b*q_c*q^c", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*k_c*G^d*q_d*G^e*p_e*G^f*k_f");
        assertEquals("-2*G^a*q_a*G^b*k_b*k^d*p_c*p^c*q_d+4*G^e*p_e*G^f*k_f*k^g*p^h*q_g*q_h-2*G^j*p_j*G^k*k_k*k^l*p_l*q_m*q^m+k_o*k^o*p_p*p^p*q_q*q^q", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*k_c*G^d*q_d*G^e*k_e*G^f*p_f");
        assertEquals("-4*G^a*q_a*G^b*p_b*k^c*k^d*p_c*q_d+2*G^e*q_e*G^f*k_f*k^h*p_g*p^g*q_h+4*G^j*k_j*G^k*p_k*k^l*p^m*q_l*q_m-k_o*k^o*p_p*p^p*q_q*q^q", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*p_c*G^d*k_d*G^e*k_e*G^f*q_f");
        assertEquals("2*G^a*p_a*G^b*q_b*k_c*k^c*p^d*q_d-k_e*k^e*p_f*p^f*q_g*q^g", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*p_c*G^d*k_d*G^e*q_e*G^f*k_f");
        assertEquals("-2*G^a*q_a*G^b*k_b*k^d*p_c*p^c*q_d-2*G^e*p_e*G^f*q_f*k_g*k^g*p^h*q_h+4*G^j*p_j*G^k*k_k*k^l*p^m*q_l*q_m+k_o*k^o*p_p*p^p*q_q*q^q", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*p_c*G^d*q_d*G^e*k_e*G^f*k_f");
        assertEquals("2*G^a*p_a*G^b*q_b*k_c*k^c*p^d*q_d-k_e*k^e*p_f*p^f*q_g*q^g", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*q_c*G^d*k_d*G^e*p_e*G^f*k_f");
        assertEquals("2*G^a*p_a*G^b*k_b*k^c*p_c*q_d*q^d-k_e*k^e*p_f*p^f*q_g*q^g", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*q_c*G^d*k_d*G^e*k_e*G^f*p_f");
        assertEquals("k_a*k^a*p_b*p^b*q_c*q^c", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*q_c*G^d*p_d*G^e*k_e*G^f*k_f");
        assertEquals("k_a*k^a*p_b*p^b*q_c*q^c", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*q_c*G^d*p_d*G^e*k_e*G^f*q_f");
        assertEquals("-4*G^a*p_a*G^b*q_b*k^c*k^d*p_c*q_d+2*G^e*k_e*G^f*q_f*k^h*p_g*p^g*q_h+2*G^j*p_j*G^k*q_k*k_l*k^l*p^m*q_m+2*G^o*p_o*G^p*k_p*k^q*p_q*q_s*q^s-k_t*k^t*p_u*p^u*q_v*q^v", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*q_c*G^d*p_d*G^e*q_e*G^f*k_f");
        assertEquals("-2*G^a*p_a*G^b*q_b*k_c*k^c*p^d*q_d+4*G^e*p_e*G^f*k_f*k^g*p^h*q_g*q_h-2*G^j*p_j*G^k*k_k*k^l*p_l*q_m*q^m+k_o*k^o*p_p*p^p*q_q*q^q", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*q_c*G^d*k_d*G^e*p_e*G^f*q_f");
        assertEquals("4*G^a*p_a*G^b*q_b*k^c*k^d*p_c*q_d-2*G^e*k_e*G^f*q_f*k^h*p_g*p^g*q_h-2*G^j*p_j*G^k*q_k*k_l*k^l*p^m*q_m+k_o*k^o*p_p*p^p*q_q*q^q", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*q_c*G^d*k_d*G^e*q_e*G^f*p_f");
        assertEquals("4*G^a*q_a*G^b*p_b*k^c*k^d*p_c*q_d+2*G^e*k_e*G^f*q_f*k^h*p_g*p^g*q_h-4*G^j*k_j*G^k*p_k*k^l*p^m*q_l*q_m-k_o*k^o*p_p*p^p*q_q*q^q", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*q_c*G^d*q_d*G^e*p_e*G^f*k_f");
        assertEquals("2*G^a*p_a*G^b*k_b*k^c*p_c*q_d*q^d-k_e*k^e*p_f*p^f*q_g*q^g", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*q_c*G^d*q_d*G^e*k_e*G^f*p_f");
        assertEquals("k_a*k^a*p_b*p^b*q_c*q^c", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*p_c*G^d*q_d*G^e*k_e*G^f*q_f");
        assertEquals("4*G^a*p_a*G^b*q_b*k^c*k^d*p_c*q_d-2*G^e*k_e*G^f*q_f*k^h*p_g*p^g*q_h-2*G^j*p_j*G^k*k_k*k^l*p_l*q_m*q^m+k_o*k^o*p_p*p^p*q_q*q^q", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*p_c*G^d*q_d*G^e*q_e*G^f*k_f");
        assertEquals("2*G^a*p_a*G^b*k_b*k^c*p_c*q_d*q^d-k_e*k^e*p_f*p^f*q_g*q^g", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*p_c*G^d*k_d*G^e*q_e*G^f*q_f");
        assertEquals("2*G^a*p_a*G^b*k_b*k^c*p_c*q_d*q^d-k_e*k^e*p_f*p^f*q_g*q^g", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*k_c*G^d*q_d*G^e*p_e*G^f*q_f");
        assertEquals("2*G^a*p_a*G^b*q_b*k_c*k^c*p^d*q_d-k_e*k^e*p_f*p^f*q_g*q^g", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*k_c*G^d*q_d*G^e*q_e*G^f*p_f");
        assertEquals("k_a*k^a*p_b*p^b*q_c*q^c", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*k_c*G^d*p_d*G^e*q_e*G^f*q_f");
        assertEquals("k_a*k^a*p_b*p^b*q_c*q^c", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*G^c*q_c*G^d*k_d*G^e*k_e*G^f*q_f");
        assertEquals("k_a*k^a*p_b*p^b*q_c*q^c", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*G^c*q_c*G^d*k_d*G^e*q_e*G^f*k_f");
        assertEquals("2*G^a*q_a*G^b*k_b*k^d*p_c*p^c*q_d-k_e*k^e*p_f*p^f*q_g*q^g", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*G^c*q_c*G^d*q_d*G^e*k_e*G^f*k_f");
        assertEquals("k_a*k^a*p_b*p^b*q_c*q^c", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*G^c*k_c*G^d*q_d*G^e*k_e*G^f*q_f");
        assertEquals("2*G^a*k_a*G^b*q_b*k^d*p_c*p^c*q_d-k_e*k^e*p_f*p^f*q_g*q^g", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*G^c*k_c*G^d*q_d*G^e*q_e*G^f*k_f");
        assertEquals("k_a*k^a*p_b*p^b*q_c*q^c", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*G^c*k_c*G^d*k_d*G^e*q_e*G^f*q_f");
        assertEquals("k_a*k^a*p_b*p^b*q_c*q^c", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*k_c*G^d*p_d*G^e*k_e*G^f*q_f");
        assertEquals("-4*G^a*p_a*G^b*q_b*k^c*k^d*p_c*q_d+4*G^e*k_e*G^f*q_f*k^g*p_g*p^h*q_h+2*G^j*p_j*G^k*k_k*k^l*p_l*q_m*q^m-k_o*k^o*p_p*p^p*q_q*q^q", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*k_c*G^d*p_d*G^e*q_e*G^f*k_f");
        assertEquals("-2*G^a*q_a*G^b*k_b*k^d*p_c*p^c*q_d+4*G^e*q_e*G^f*k_f*k^g*p_g*p^h*q_h-2*G^j*p_j*G^k*k_k*k^l*p_l*q_m*q^m+k_o*k^o*p_p*p^p*q_q*q^q", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*k_c*G^d*k_d*G^e*p_e*G^f*q_f");
        assertEquals("k_a*k^a*p_b*p^b*q_c*q^c", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*k_c*G^d*k_d*G^e*q_e*G^f*p_f");
        assertEquals("2*G^a*q_a*G^b*p_b*k_c*k^c*p^d*q_d-k_e*k^e*p_f*p^f*q_g*q^g", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*k_c*G^d*q_d*G^e*p_e*G^f*k_f");
        assertEquals("2*G^a*q_a*G^b*k_b*k^d*p_c*p^c*q_d+2*G^e*q_e*G^f*p_f*k_g*k^g*p^h*q_h-4*G^j*q_j*G^k*k_k*k^l*p_l*p^m*q_m+2*G^o*p_o*G^p*k_p*k^q*p_q*q_s*q^s-k_t*k^t*p_u*p^u*q_v*q^v", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*k_c*G^d*q_d*G^e*k_e*G^f*p_f");
        assertEquals("4*G^a*q_a*G^b*p_b*k^c*k^d*p_c*q_d-2*G^e*q_e*G^f*k_f*k^h*p_g*p^g*q_h-2*G^j*q_j*G^k*p_k*k_l*k^l*p^m*q_m+k_o*k^o*p_p*p^p*q_q*q^q", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*p_c*G^d*k_d*G^e*k_e*G^f*q_f");
        assertEquals("k_a*k^a*p_b*p^b*q_c*q^c", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*p_c*G^d*k_d*G^e*q_e*G^f*k_f");
        assertEquals("2*G^a*q_a*G^b*k_b*k^d*p_c*p^c*q_d-k_e*k^e*p_f*p^f*q_g*q^g", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*p_c*G^d*q_d*G^e*k_e*G^f*k_f");
        assertEquals("k_a*k^a*p_b*p^b*q_c*q^c", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*q_c*G^d*k_d*G^e*p_e*G^f*k_f");
        assertEquals("-2*G^a*q_a*G^b*p_b*k_c*k^c*p^d*q_d+4*G^e*q_e*G^f*k_f*k^g*p_g*p^h*q_h-2*G^j*p_j*G^k*k_k*k^l*p_l*q_m*q^m+k_o*k^o*p_p*p^p*q_q*q^q", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*q_c*G^d*k_d*G^e*k_e*G^f*p_f");
        assertEquals("2*G^a*q_a*G^b*p_b*k_c*k^c*p^d*q_d-k_e*k^e*p_f*p^f*q_g*q^g", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*q_c*G^d*p_d*G^e*k_e*G^f*k_f");
        assertEquals("2*G^a*q_a*G^b*p_b*k_c*k^c*p^d*q_d-k_e*k^e*p_f*p^f*q_g*q^g", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*p_c*G^d*p_d*G^e*k_e*G^f*q_f");
        assertEquals("k_a*k^a*p_b*p^b*q_c*q^c", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*p_c*G^d*p_d*G^e*q_e*G^f*k_f");
        assertEquals("2*G^a*q_a*G^b*k_b*k^d*p_c*p^c*q_d-k_e*k^e*p_f*p^f*q_g*q^g", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*p_c*G^d*k_d*G^e*p_e*G^f*q_f");
        assertEquals("4*G^a*p_a*G^b*q_b*k^c*k^d*p_c*q_d-4*G^e*k_e*G^f*q_f*k^g*p_g*p^h*q_h+2*G^j*k_j*G^k*p_k*k^l*p_l*q_m*q^m-k_o*k^o*p_p*p^p*q_q*q^q", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*p_c*G^d*k_d*G^e*q_e*G^f*p_f");
        assertEquals("4*G^a*q_a*G^b*p_b*k^c*k^d*p_c*q_d-2*G^e*q_e*G^f*p_f*k_g*k^g*p^h*q_h-2*G^j*k_j*G^k*p_k*k^l*p_l*q_m*q^m+k_o*k^o*p_p*p^p*q_q*q^q", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*p_c*G^d*q_d*G^e*p_e*G^f*k_f");
        assertEquals("-2*G^a*q_a*G^b*k_b*k^d*p_c*p^c*q_d-2*G^e*q_e*G^f*p_f*k_g*k^g*p^h*q_h+4*G^j*q_j*G^k*k_k*k^l*p_l*p^m*q_m+k_o*k^o*p_p*p^p*q_q*q^q", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*p_c*G^d*q_d*G^e*k_e*G^f*p_f");
        assertEquals("-4*G^a*q_a*G^b*p_b*k^c*k^d*p_c*q_d+2*G^e*q_e*G^f*k_f*k^h*p_g*p^g*q_h+2*G^j*q_j*G^k*p_k*k_l*k^l*p^m*q_m+2*G^o*k_o*G^p*p_p*k^q*p_q*q_s*q^s-k_t*k^t*p_u*p^u*q_v*q^v", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*k_c*G^d*p_d*G^e*p_e*G^f*q_f");
        assertEquals("k_a*k^a*p_b*p^b*q_c*q^c", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*k_c*G^d*p_d*G^e*q_e*G^f*p_f");
        assertEquals("2*G^a*q_a*G^b*p_b*k_c*k^c*p^d*q_d-k_e*k^e*p_f*p^f*q_g*q^g", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*k_c*G^d*q_d*G^e*p_e*G^f*p_f");
        assertEquals("k_a*k^a*p_b*p^b*q_c*q^c", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*q_c*G^d*p_d*G^e*p_e*G^f*k_f");
        assertEquals("2*G^a*q_a*G^b*k_b*k^d*p_c*p^c*q_d-k_e*k^e*p_f*p^f*q_g*q^g", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*q_c*G^d*p_d*G^e*k_e*G^f*p_f");
        assertEquals("4*G^a*q_a*G^b*p_b*k^c*k^d*p_c*q_d-2*G^e*q_e*G^f*k_f*k^h*p_g*p^g*q_h-2*G^j*k_j*G^k*p_k*k^l*p_l*q_m*q^m+k_o*k^o*p_p*p^p*q_q*q^q", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*q_c*G^d*k_d*G^e*p_e*G^f*p_f");
        assertEquals("2*G^a*q_a*G^b*k_b*k^d*p_c*p^c*q_d-k_e*k^e*p_f*p^f*q_g*q^g", ds.transform(t));
        t = parse("G^a*q_a*G^b*q_b*G^c*p_c*G^d*k_d*G^e*p_e*G^f*k_f");
        assertEquals("2*G^a*p_a*G^b*k_b*k^c*p_c*q_d*q^d-k_e*k^e*p_f*p^f*q_g*q^g", ds.transform(t));
        t = parse("G^a*q_a*G^b*q_b*G^c*p_c*G^d*k_d*G^e*k_e*G^f*p_f");
        assertEquals("k_a*k^a*p_b*p^b*q_c*q^c", ds.transform(t));
        t = parse("G^a*q_a*G^b*q_b*G^c*p_c*G^d*p_d*G^e*k_e*G^f*k_f");
        assertEquals("k_a*k^a*p_b*p^b*q_c*q^c", ds.transform(t));
        t = parse("G^a*q_a*G^b*q_b*G^c*k_c*G^d*p_d*G^e*p_e*G^f*k_f");
        assertEquals("k_a*k^a*p_b*p^b*q_c*q^c", ds.transform(t));
        t = parse("G^a*q_a*G^b*q_b*G^c*k_c*G^d*p_d*G^e*k_e*G^f*p_f");
        assertEquals("2*G^a*k_a*G^b*p_b*k^c*p_c*q_d*q^d-k_e*k^e*p_f*p^f*q_g*q^g", ds.transform(t));
        t = parse("G^a*q_a*G^b*q_b*G^c*k_c*G^d*k_d*G^e*p_e*G^f*p_f");
        assertEquals("k_a*k^a*p_b*p^b*q_c*q^c", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*q_c*G^d*p_d*G^e*k_e*G^f*q_f");
        assertEquals("-2*G^a*k_a*G^b*q_b*k^d*p_c*p^c*q_d-2*G^e*p_e*G^f*q_f*k_g*k^g*p^h*q_h+4*G^j*k_j*G^k*q_k*k^l*p_l*p^m*q_m+k_o*k^o*p_p*p^p*q_q*q^q", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*q_c*G^d*p_d*G^e*q_e*G^f*k_f");
        assertEquals("2*G^a*p_a*G^b*q_b*k_c*k^c*p^d*q_d+4*G^e*q_e*G^f*k_f*k^g*p_g*p^h*q_h-4*G^j*p_j*G^k*k_k*k^l*p^m*q_l*q_m-k_o*k^o*p_p*p^p*q_q*q^q", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*q_c*G^d*k_d*G^e*p_e*G^f*q_f");
        assertEquals("2*G^a*k_a*G^b*q_b*k^d*p_c*p^c*q_d+2*G^e*p_e*G^f*q_f*k_g*k^g*p^h*q_h-4*G^j*k_j*G^k*q_k*k^l*p_l*p^m*q_m+2*G^o*k_o*G^p*p_p*k^q*p_q*q_s*q^s-k_t*k^t*p_u*p^u*q_v*q^v", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*q_c*G^d*k_d*G^e*q_e*G^f*p_f");
        assertEquals("-2*G^a*k_a*G^b*q_b*k^d*p_c*p^c*q_d+4*G^e*k_e*G^f*p_f*k^g*p^h*q_g*q_h-2*G^j*k_j*G^k*p_k*k^l*p_l*q_m*q^m+k_o*k^o*p_p*p^p*q_q*q^q", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*q_c*G^d*q_d*G^e*p_e*G^f*k_f");
        assertEquals("k_a*k^a*p_b*p^b*q_c*q^c", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*q_c*G^d*q_d*G^e*k_e*G^f*p_f");
        assertEquals("2*G^a*k_a*G^b*p_b*k^c*p_c*q_d*q^d-k_e*k^e*p_f*p^f*q_g*q^g", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*p_c*G^d*q_d*G^e*k_e*G^f*q_f");
        assertEquals("2*G^a*k_a*G^b*q_b*k^d*p_c*p^c*q_d-k_e*k^e*p_f*p^f*q_g*q^g", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*p_c*G^d*q_d*G^e*q_e*G^f*k_f");
        assertEquals("k_a*k^a*p_b*p^b*q_c*q^c", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*p_c*G^d*k_d*G^e*q_e*G^f*q_f");
        assertEquals("k_a*k^a*p_b*p^b*q_c*q^c", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*k_c*G^d*q_d*G^e*p_e*G^f*q_f");
        assertEquals("-2*G^a*p_a*G^b*q_b*k_c*k^c*p^d*q_d+4*G^e*k_e*G^f*q_f*k^g*p_g*p^h*q_h-2*G^j*k_j*G^k*p_k*k^l*p_l*q_m*q^m+k_o*k^o*p_p*p^p*q_q*q^q", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*k_c*G^d*q_d*G^e*q_e*G^f*p_f");
        assertEquals("2*G^a*k_a*G^b*p_b*k^c*p_c*q_d*q^d-k_e*k^e*p_f*p^f*q_g*q^g", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*k_c*G^d*p_d*G^e*q_e*G^f*q_f");
        assertEquals("2*G^a*k_a*G^b*p_b*k^c*p_c*q_d*q^d-k_e*k^e*p_f*p^f*q_g*q^g", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*p_c*G^d*p_d*G^e*k_e*G^f*q_f");
        assertEquals("2*G^a*k_a*G^b*q_b*k^d*p_c*p^c*q_d-k_e*k^e*p_f*p^f*q_g*q^g", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*p_c*G^d*p_d*G^e*q_e*G^f*k_f");
        assertEquals("k_a*k^a*p_b*p^b*q_c*q^c", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*p_c*G^d*k_d*G^e*p_e*G^f*q_f");
        assertEquals("-2*G^a*k_a*G^b*q_b*k^d*p_c*p^c*q_d+4*G^e*k_e*G^f*q_f*k^g*p_g*p^h*q_h-2*G^j*k_j*G^k*p_k*k^l*p_l*q_m*q^m+k_o*k^o*p_p*p^p*q_q*q^q", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*p_c*G^d*k_d*G^e*q_e*G^f*p_f");
        assertEquals("2*G^a*k_a*G^b*q_b*k^d*p_c*p^c*q_d+2*G^e*q_e*G^f*p_f*k_g*k^g*p^h*q_h-4*G^j*k_j*G^k*p_k*k^l*p^m*q_l*q_m+2*G^o*k_o*G^p*p_p*k^q*p_q*q_s*q^s-k_t*k^t*p_u*p^u*q_v*q^v", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*p_c*G^d*q_d*G^e*p_e*G^f*k_f");
        assertEquals("2*G^a*q_a*G^b*p_b*k_c*k^c*p^d*q_d-4*G^e*q_e*G^f*k_f*k^g*p_g*p^h*q_h+4*G^j*p_j*G^k*k_k*k^l*p^m*q_l*q_m-k_o*k^o*p_p*p^p*q_q*q^q", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*p_c*G^d*q_d*G^e*k_e*G^f*p_f");
        assertEquals("-2*G^a*q_a*G^b*p_b*k_c*k^c*p^d*q_d+4*G^e*k_e*G^f*p_f*k^g*p^h*q_g*q_h-2*G^j*k_j*G^k*p_k*k^l*p_l*q_m*q^m+k_o*k^o*p_p*p^p*q_q*q^q", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*k_c*G^d*p_d*G^e*p_e*G^f*q_f");
        assertEquals("2*G^a*k_a*G^b*q_b*k^d*p_c*p^c*q_d-k_e*k^e*p_f*p^f*q_g*q^g", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*k_c*G^d*p_d*G^e*q_e*G^f*p_f");
        assertEquals("-2*G^a*k_a*G^b*q_b*k^d*p_c*p^c*q_d-2*G^e*q_e*G^f*p_f*k_g*k^g*p^h*q_h+4*G^j*k_j*G^k*p_k*k^l*p^m*q_l*q_m+k_o*k^o*p_p*p^p*q_q*q^q", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*k_c*G^d*q_d*G^e*p_e*G^f*p_f");
        assertEquals("2*G^a*k_a*G^b*q_b*k^d*p_c*p^c*q_d-k_e*k^e*p_f*p^f*q_g*q^g", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*q_c*G^d*p_d*G^e*p_e*G^f*k_f");
        assertEquals("k_a*k^a*p_b*p^b*q_c*q^c", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*q_c*G^d*p_d*G^e*k_e*G^f*p_f");
        assertEquals("2*G^a*k_a*G^b*p_b*k^c*p_c*q_d*q^d-k_e*k^e*p_f*p^f*q_g*q^g", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*q_c*G^d*k_d*G^e*p_e*G^f*p_f");
        assertEquals("k_a*k^a*p_b*p^b*q_c*q^c", ds.transform(t));
        t = parse("G^a*k_a*G^b*k_b*G^c*p_c*G^d*q_d*G^e*p_e*G^f*q_f");
        assertEquals("2*G^a*p_a*G^b*q_b*k_c*k^c*p^d*q_d-k_e*k^e*p_f*p^f*q_g*q^g", ds.transform(t));
        t = parse("G^a*k_a*G^b*k_b*G^c*p_c*G^d*q_d*G^e*q_e*G^f*p_f");
        assertEquals("k_a*k^a*p_b*p^b*q_c*q^c", ds.transform(t));
        t = parse("G^a*k_a*G^b*k_b*G^c*p_c*G^d*p_d*G^e*q_e*G^f*q_f");
        assertEquals("k_a*k^a*p_b*p^b*q_c*q^c", ds.transform(t));
        t = parse("G^a*k_a*G^b*k_b*G^c*q_c*G^d*p_d*G^e*p_e*G^f*q_f");
        assertEquals("k_a*k^a*p_b*p^b*q_c*q^c", ds.transform(t));
        t = parse("G^a*k_a*G^b*k_b*G^c*q_c*G^d*p_d*G^e*q_e*G^f*p_f");
        assertEquals("2*G^a*q_a*G^b*p_b*k_c*k^c*p^d*q_d-k_e*k^e*p_f*p^f*q_g*q^g", ds.transform(t));
        t = parse("G^a*k_a*G^b*k_b*G^c*q_c*G^d*q_d*G^e*p_e*G^f*p_f");
        assertEquals("k_a*k^a*p_b*p^b*q_c*q^c", ds.transform(t));
    }

    @Test
    public void test6a() throws Exception {
        CC.setDefaultOutputFormat(OutputFormat.SimpleRedberry);
        GeneralIndicesInsertion indicesInsertion = new GeneralIndicesInsertion();
        CC.current().getParseManager().defaultParserPreprocessors.add(indicesInsertion);
        indicesInsertion.addInsertionRule(parseSimple("G^a'_b'a"), IndexType.Matrix1);
        indicesInsertion.addInsertionRule(parseSimple("G5^a'_b'"), IndexType.Matrix1);

        DiracSimplify0 ds = new DiracSimplify0(parseSimple("G_a"), parse("4"), parse("4"), EXPAND_AND_ELIMINATE);

        Tensor t;
        t = parse("G^a*p_a*G^b*q_b*G^c*p_c*G^d*k_d*f_e*G^e");
        assertEquals("-G^a*q_a*G^b*k_b*f_c*G^c*p_d*p^d+2*G^a*p_a*G^b*k_b*f_c*G^c*p^d*q_d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*p_c*f_d*G^d*G^e*k_e");
        assertEquals("-G^a*q_a*f_b*G^b*G^c*k_c*p_d*p^d+2*G^a*p_a*f_b*G^b*G^c*k_c*p^d*q_d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*k_c*G^d*p_d*f_e*G^e");
        assertEquals("-2*G^a*q_a*G^b*p_b*f_c*G^c*k^d*p_d+G^a*q_a*G^b*k_b*f_c*G^c*p_d*p^d+2*G^a*k_a*G^b*p_b*f_c*G^c*p^d*q_d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*k_c*f_d*G^d*G^e*p_e");
        assertEquals("2*G^a*q_a*G^b*k_b*G^c*p_c*f^d*p_d-2*G^a*q_a*f_b*G^b*G^c*p_c*k^d*p_d-G^a*q_a*G^b*k_b*f_c*G^c*p_d*p^d+2*G^a*k_a*f_b*G^b*G^c*p_c*p^d*q_d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*f_c*G^c*G^d*p_d*G^e*k_e");
        assertEquals("-2*G^a*q_a*G^b*p_b*G^c*k_c*f^d*p_d+G^a*q_a*f_b*G^b*G^c*k_c*p_d*p^d+2*f_a*G^a*G^b*p_b*G^c*k_c*p^d*q_d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*f_c*G^c*G^d*k_d*G^e*p_e");
        assertEquals("-2*G^a*q_a*G^b*k_b*G^c*p_c*f^d*p_d+2*G^a*q_a*f_b*G^b*G^c*p_c*k^d*p_d-G^a*q_a*f_b*G^b*G^c*k_c*p_d*p^d+2*f_a*G^a*G^b*k_b*G^c*p_c*p^d*q_d", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*G^c*q_c*G^d*k_d*f_e*G^e");
        assertEquals("G^a*q_a*G^b*k_b*f_c*G^c*p_d*p^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*G^c*q_c*f_d*G^d*G^e*k_e");
        assertEquals("G^a*q_a*f_b*G^b*G^c*k_c*p_d*p^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*G^c*k_c*G^d*q_d*f_e*G^e");
        assertEquals("G^a*k_a*G^b*q_b*f_c*G^c*p_d*p^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*G^c*k_c*f_d*G^d*G^e*q_e");
        assertEquals("G^a*k_a*f_b*G^b*G^c*q_c*p_d*p^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*f_c*G^c*G^d*q_d*G^e*k_e");
        assertEquals("f_a*G^a*G^b*q_b*G^c*k_c*p_d*p^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*f_c*G^c*G^d*k_d*G^e*q_e");
        assertEquals("f_a*G^a*G^b*k_b*G^c*q_c*p_d*p^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*q_c*G^d*p_d*f_e*G^e");
        assertEquals("2*G^a*q_a*G^b*p_b*f_c*G^c*k^d*p_d+G^a*k_a*G^b*q_b*f_c*G^c*p_d*p^d-2*G^a*k_a*G^b*p_b*f_c*G^c*p^d*q_d", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*q_c*f_d*G^d*G^e*p_e");
        assertEquals("2*G^a*k_a*G^b*q_b*G^c*p_c*f^d*p_d+2*G^a*q_a*f_b*G^b*G^c*p_c*k^d*p_d-G^a*k_a*G^b*q_b*f_c*G^c*p_d*p^d-2*G^a*k_a*f_b*G^b*G^c*p_c*p^d*q_d", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*p_c*G^d*q_d*f_e*G^e");
        assertEquals("2*G^a*p_a*G^b*q_b*f_c*G^c*k^d*p_d-G^a*k_a*G^b*q_b*f_c*G^c*p_d*p^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*p_c*f_d*G^d*G^e*q_e");
        assertEquals("2*G^a*p_a*f_b*G^b*G^c*q_c*k^d*p_d-G^a*k_a*f_b*G^b*G^c*q_c*p_d*p^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*f_c*G^c*G^d*q_d*G^e*p_e");
        assertEquals("-2*G^a*k_a*G^b*q_b*G^c*p_c*f^d*p_d+2*f_a*G^a*G^b*q_b*G^c*p_c*k^d*p_d-G^a*k_a*f_b*G^b*G^c*q_c*p_d*p^d+2*G^a*k_a*f_b*G^b*G^c*p_c*p^d*q_d", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*f_c*G^c*G^d*p_d*G^e*q_e");
        assertEquals("-2*G^a*k_a*G^b*p_b*G^c*q_c*f^d*p_d+2*f_a*G^a*G^b*p_b*G^c*q_c*k^d*p_d+G^a*k_a*f_b*G^b*G^c*q_c*p_d*p^d", ds.transform(t));
        t = parse("G^a*p_a*f_b*G^b*G^c*q_c*G^d*p_d*G^e*k_e");
        assertEquals("2*G^a*q_a*G^b*p_b*G^c*k_c*f^d*p_d+f_a*G^a*G^b*q_b*G^c*k_c*p_d*p^d-2*f_a*G^a*G^b*p_b*G^c*k_c*p^d*q_d", ds.transform(t));
        t = parse("G^a*p_a*f_b*G^b*G^c*q_c*G^d*k_d*G^e*p_e");
        assertEquals("2*G^a*q_a*G^b*k_b*G^c*p_c*f^d*p_d+2*f_a*G^a*G^b*q_b*G^c*p_c*k^d*p_d-f_a*G^a*G^b*q_b*G^c*k_c*p_d*p^d-2*f_a*G^a*G^b*k_b*G^c*p_c*p^d*q_d", ds.transform(t));
        t = parse("G^a*p_a*f_b*G^b*G^c*p_c*G^d*q_d*G^e*k_e");
        assertEquals("2*G^a*p_a*G^b*q_b*G^c*k_c*f^d*p_d-f_a*G^a*G^b*q_b*G^c*k_c*p_d*p^d", ds.transform(t));
        t = parse("G^a*p_a*f_b*G^b*G^c*p_c*G^d*k_d*G^e*q_e");
        assertEquals("2*G^a*p_a*G^b*k_b*G^c*q_c*f^d*p_d-f_a*G^a*G^b*k_b*G^c*q_c*p_d*p^d", ds.transform(t));
        t = parse("G^a*p_a*f_b*G^b*G^c*k_c*G^d*q_d*G^e*p_e");
        assertEquals("2*G^a*k_a*G^b*q_b*G^c*p_c*f^d*p_d-2*f_a*G^a*G^b*q_b*G^c*p_c*k^d*p_d-f_a*G^a*G^b*k_b*G^c*q_c*p_d*p^d+2*f_a*G^a*G^b*k_b*G^c*p_c*p^d*q_d", ds.transform(t));
        t = parse("G^a*p_a*f_b*G^b*G^c*k_c*G^d*p_d*G^e*q_e");
        assertEquals("2*G^a*k_a*G^b*p_b*G^c*q_c*f^d*p_d-2*f_a*G^a*G^b*p_b*G^c*q_c*k^d*p_d+f_a*G^a*G^b*k_b*G^c*q_c*p_d*p^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*p_c*G^d*k_d*f_e*G^e");
        assertEquals("G^a*q_a*G^b*k_b*f_c*G^c*p_d*p^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*p_c*f_d*G^d*G^e*k_e");
        assertEquals("G^a*q_a*f_b*G^b*G^c*k_c*p_d*p^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*k_c*G^d*p_d*f_e*G^e");
        assertEquals("2*G^a*q_a*G^b*p_b*f_c*G^c*k^d*p_d-G^a*q_a*G^b*k_b*f_c*G^c*p_d*p^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*k_c*f_d*G^d*G^e*p_e");
        assertEquals("-2*G^a*q_a*G^b*k_b*G^c*p_c*f^d*p_d+2*G^a*q_a*f_b*G^b*G^c*p_c*k^d*p_d+G^a*q_a*G^b*k_b*f_c*G^c*p_d*p^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*f_c*G^c*G^d*p_d*G^e*k_e");
        assertEquals("2*G^a*q_a*G^b*p_b*G^c*k_c*f^d*p_d-G^a*q_a*f_b*G^b*G^c*k_c*p_d*p^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*f_c*G^c*G^d*k_d*G^e*p_e");
        assertEquals("2*G^a*q_a*G^b*k_b*G^c*p_c*f^d*p_d-2*G^a*q_a*f_b*G^b*G^c*p_c*k^d*p_d+G^a*q_a*f_b*G^b*G^c*k_c*p_d*p^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*p_c*G^d*p_d*f_e*G^e");
        assertEquals("G^a*q_a*G^b*k_b*f_c*G^c*p_d*p^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*p_c*f_d*G^d*G^e*p_e");
        assertEquals("2*G^a*q_a*G^b*k_b*G^c*p_c*f^d*p_d-G^a*q_a*G^b*k_b*f_c*G^c*p_d*p^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*f_c*G^c*G^d*p_d*G^e*p_e");
        assertEquals("G^a*q_a*G^b*k_b*f_c*G^c*p_d*p^d", ds.transform(t));
        t = parse("G^a*q_a*f_b*G^b*G^c*p_c*G^d*p_d*G^e*k_e");
        assertEquals("G^a*q_a*f_b*G^b*G^c*k_c*p_d*p^d", ds.transform(t));
        t = parse("G^a*q_a*f_b*G^b*G^c*p_c*G^d*k_d*G^e*p_e");
        assertEquals("2*G^a*q_a*f_b*G^b*G^c*p_c*k^d*p_d-G^a*q_a*f_b*G^b*G^c*k_c*p_d*p^d", ds.transform(t));
        t = parse("G^a*q_a*f_b*G^b*G^c*k_c*G^d*p_d*G^e*p_e");
        assertEquals("G^a*q_a*f_b*G^b*G^c*k_c*p_d*p^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*q_c*G^d*p_d*f_e*G^e");
        assertEquals("-G^a*k_a*G^b*q_b*f_c*G^c*p_d*p^d+2*G^a*k_a*G^b*p_b*f_c*G^c*p^d*q_d", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*q_c*f_d*G^d*G^e*p_e");
        assertEquals("-2*G^a*k_a*G^b*q_b*G^c*p_c*f^d*p_d+G^a*k_a*G^b*q_b*f_c*G^c*p_d*p^d+2*G^a*k_a*f_b*G^b*G^c*p_c*p^d*q_d", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*p_c*G^d*q_d*f_e*G^e");
        assertEquals("G^a*k_a*G^b*q_b*f_c*G^c*p_d*p^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*p_c*f_d*G^d*G^e*q_e");
        assertEquals("G^a*k_a*f_b*G^b*G^c*q_c*p_d*p^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*f_c*G^c*G^d*q_d*G^e*p_e");
        assertEquals("2*G^a*k_a*G^b*q_b*G^c*p_c*f^d*p_d+G^a*k_a*f_b*G^b*G^c*q_c*p_d*p^d-2*G^a*k_a*f_b*G^b*G^c*p_c*p^d*q_d", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*f_c*G^c*G^d*p_d*G^e*q_e");
        assertEquals("2*G^a*k_a*G^b*p_b*G^c*q_c*f^d*p_d-G^a*k_a*f_b*G^b*G^c*q_c*p_d*p^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*p_c*G^d*p_d*f_e*G^e");
        assertEquals("G^a*k_a*G^b*q_b*f_c*G^c*p_d*p^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*p_c*f_d*G^d*G^e*p_e");
        assertEquals("2*G^a*k_a*G^b*q_b*G^c*p_c*f^d*p_d-G^a*k_a*G^b*q_b*f_c*G^c*p_d*p^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*f_c*G^c*G^d*p_d*G^e*p_e");
        assertEquals("G^a*k_a*G^b*q_b*f_c*G^c*p_d*p^d", ds.transform(t));
        t = parse("G^a*k_a*f_b*G^b*G^c*p_c*G^d*q_d*G^e*p_e");
        assertEquals("-G^a*k_a*f_b*G^b*G^c*q_c*p_d*p^d+2*G^a*k_a*f_b*G^b*G^c*p_c*p^d*q_d", ds.transform(t));
        t = parse("G^a*k_a*f_b*G^b*G^c*p_c*G^d*p_d*G^e*q_e");
        assertEquals("G^a*k_a*f_b*G^b*G^c*q_c*p_d*p^d", ds.transform(t));
        t = parse("G^a*k_a*f_b*G^b*G^c*q_c*G^d*p_d*G^e*p_e");
        assertEquals("G^a*k_a*f_b*G^b*G^c*q_c*p_d*p^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*p_b*G^c*q_c*G^d*p_d*G^e*k_e");
        assertEquals("-f_a*G^a*G^b*q_b*G^c*k_c*p_d*p^d+2*f_a*G^a*G^b*p_b*G^c*k_c*p^d*q_d", ds.transform(t));
        t = parse("f_a*G^a*G^b*p_b*G^c*q_c*G^d*k_d*G^e*p_e");
        assertEquals("-2*f_a*G^a*G^b*q_b*G^c*p_c*k^d*p_d+f_a*G^a*G^b*q_b*G^c*k_c*p_d*p^d+2*f_a*G^a*G^b*k_b*G^c*p_c*p^d*q_d", ds.transform(t));
        t = parse("f_a*G^a*G^b*p_b*G^c*p_c*G^d*q_d*G^e*k_e");
        assertEquals("f_a*G^a*G^b*q_b*G^c*k_c*p_d*p^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*p_b*G^c*p_c*G^d*k_d*G^e*q_e");
        assertEquals("f_a*G^a*G^b*k_b*G^c*q_c*p_d*p^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*p_b*G^c*k_c*G^d*q_d*G^e*p_e");
        assertEquals("2*f_a*G^a*G^b*q_b*G^c*p_c*k^d*p_d+f_a*G^a*G^b*k_b*G^c*q_c*p_d*p^d-2*f_a*G^a*G^b*k_b*G^c*p_c*p^d*q_d", ds.transform(t));
        t = parse("f_a*G^a*G^b*p_b*G^c*k_c*G^d*p_d*G^e*q_e");
        assertEquals("2*f_a*G^a*G^b*p_b*G^c*q_c*k^d*p_d-f_a*G^a*G^b*k_b*G^c*q_c*p_d*p^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*q_b*G^c*p_c*G^d*p_d*G^e*k_e");
        assertEquals("f_a*G^a*G^b*q_b*G^c*k_c*p_d*p^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*q_b*G^c*p_c*G^d*k_d*G^e*p_e");
        assertEquals("2*f_a*G^a*G^b*q_b*G^c*p_c*k^d*p_d-f_a*G^a*G^b*q_b*G^c*k_c*p_d*p^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*q_b*G^c*k_c*G^d*p_d*G^e*p_e");
        assertEquals("f_a*G^a*G^b*q_b*G^c*k_c*p_d*p^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*k_b*G^c*p_c*G^d*q_d*G^e*p_e");
        assertEquals("-f_a*G^a*G^b*k_b*G^c*q_c*p_d*p^d+2*f_a*G^a*G^b*k_b*G^c*p_c*p^d*q_d", ds.transform(t));
        t = parse("f_a*G^a*G^b*k_b*G^c*p_c*G^d*p_d*G^e*q_e");
        assertEquals("f_a*G^a*G^b*k_b*G^c*q_c*p_d*p^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*k_b*G^c*q_c*G^d*p_d*G^e*p_e");
        assertEquals("f_a*G^a*G^b*k_b*G^c*q_c*p_d*p^d", ds.transform(t));
    }


    @Test
    public void test6b() throws Exception {
        CC.setDefaultOutputFormat(OutputFormat.SimpleRedberry);
        GeneralIndicesInsertion indicesInsertion = new GeneralIndicesInsertion();
        CC.current().getParseManager().defaultParserPreprocessors.add(indicesInsertion);
        indicesInsertion.addInsertionRule(parseSimple("G^a'_b'a"), IndexType.Matrix1);
        indicesInsertion.addInsertionRule(parseSimple("G5^a'_b'"), IndexType.Matrix1);

        DiracSimplify0 ds0 = new DiracSimplify0(parseSimple("G_a"), parse("4"), parse("4"), EXPAND_AND_ELIMINATE);
        DiracOrderTransformation dot = new DiracOrderTransformation(parseSimple("G_a"), parse("4"), parse("4"));
        Transformation ds = new TransformationCollection(ds0, dot);

        Tensor t;

        t = parse("G^a*p_a*G^b*q_b*G^c*p_c*G^d*q_d*G^e*k_e*G^f*k_f*f_g*G^g");
        TAssert.assertEquals("4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
    }

    @Test
    public void test7() throws Exception {
        CC.setDefaultOutputFormat(OutputFormat.SimpleRedberry);
        GeneralIndicesInsertion indicesInsertion = new GeneralIndicesInsertion();
        CC.current().getParseManager().defaultParserPreprocessors.add(indicesInsertion);
        indicesInsertion.addInsertionRule(parseSimple("G^a'_b'a"), IndexType.Matrix1);
        indicesInsertion.addInsertionRule(parseSimple("G5^a'_b'"), IndexType.Matrix1);

        DiracSimplify0 ds = new DiracSimplify0(parseSimple("G_a"), parse("4"), parse("4"), EXPAND_AND_ELIMINATE);

        Tensor t;

        t = parse("G^a*p_a*G^b*p_b*G5*G_c*p^c");
        TAssert.assertEquals("p_a*p^a*G5*G_c*p^c", ds.transform(t));
    }

    @Test
    public void test6_longTest() throws Exception {
        CC.setDefaultOutputFormat(OutputFormat.SimpleRedberry);
        GeneralIndicesInsertion indicesInsertion = new GeneralIndicesInsertion();
        CC.current().getParseManager().defaultParserPreprocessors.add(indicesInsertion);
        indicesInsertion.addInsertionRule(parseSimple("G^a'_b'a"), IndexType.Matrix1);
        indicesInsertion.addInsertionRule(parseSimple("G5^a'_b'"), IndexType.Matrix1);

        DiracSimplify0 ds0 = new DiracSimplify0(parseSimple("G_a"), parse("4"), parse("4"), EXPAND_AND_ELIMINATE);
        DiracOrderTransformation dot = new DiracOrderTransformation(parseSimple("G_a"), parse("4"), parse("4"));
        Transformation ds = new TransformationCollection(ds0, dot);

        Tensor t;
        t = parse("G^a*p_a*G^b*q_b*G^c*k_c*G^d*p_d*G^e*q_e*G^f*k_f*f_g*G^g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d-8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e+4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*k_c*G^d*p_d*G^e*q_e*f_f*G^f*G^g*k_g");
        assertEquals("-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d-8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*k_c*G^d*p_d*G^e*k_e*G^f*q_f*f_g*G^g");
        assertEquals("8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d-8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*k_c*G^d*p_d*G^e*k_e*f_f*G^f*G^g*q_g");
        assertEquals("-8*f^c*G^d*k^a*k^b*p_a*p_b*q_c*q_d+8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*k_c*G^d*p_d*f_e*G^e*G^f*q_f*G^g*k_g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-8*f^c*G^d*k^a*k^b*p_a*p_b*q_c*q_d+8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d+8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d-8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e+4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*k_c*G^d*p_d*f_e*G^e*G^f*k_f*G^g*q_g");
        assertEquals("8*f^c*G^d*k^a*k^b*p_a*p_b*q_c*q_d-8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e+4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*k_c*G^d*q_d*G^e*p_e*G^f*k_f*f_g*G^g");
        assertEquals("-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*k_c*G^d*q_d*G^e*p_e*f_f*G^f*G^g*k_g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e+4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*k_c*G^d*q_d*G^e*k_e*G^f*p_f*f_g*G^g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d-8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d-8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*k_c*G^d*q_d*G^e*k_e*f_f*G^f*G^g*p_g");
        assertEquals("8*f^c*G^d*k^a*k^b*p_c*p_d*q_a*q_b-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*k_c*G^d*q_d*f_e*G^e*G^f*p_f*G^g*k_g");
        assertEquals("8*f^c*G^d*k^a*k^b*p_c*p_d*q_a*q_b-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*k_c*G^d*q_d*f_e*G^e*G^f*k_f*G^g*p_g");
        assertEquals("-8*f^c*G^d*k^a*k^b*p_c*p_d*q_a*q_b+4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e+4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*k_c*G^d*k_d*G^e*p_e*G^f*q_f*f_g*G^g");
        assertEquals("4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*k_c*G^d*k_d*G^e*p_e*f_f*G^f*G^g*q_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*k_c*G^d*k_d*G^e*q_e*G^f*p_f*f_g*G^g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*k_c*G^d*k_d*G^e*q_e*f_f*G^f*G^g*p_g");
        assertEquals("2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*k_c*G^d*k_d*f_e*G^e*G^f*p_f*G^g*q_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*k_c*G^d*k_d*f_e*G^e*G^f*q_f*G^g*p_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*k_c*f_d*G^d*G^e*p_e*G^f*q_f*G^g*k_g");
        assertEquals("8*f^c*G^d*k^a*k^b*p_c*p_d*q_a*q_b-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+8*f^c*G^d*k^a*k^b*p_a*p_b*q_c*q_d-8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d-8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d-8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*k_c*f_d*G^d*G^e*p_e*G^f*k_f*G^g*q_g");
        assertEquals("-8*f^c*G^d*k^a*k^b*p_a*p_b*q_c*q_d+8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*k_c*f_d*G^d*G^e*q_e*G^f*p_f*G^g*k_g");
        assertEquals("-8*f^c*G^d*k^a*k^b*p_c*p_d*q_a*q_b+4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-8*f^c*G^d*k^a*k^b*p_a*p_b*q_c*q_d+8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d+8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e+4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*k_c*f_d*G^d*G^e*q_e*G^f*k_f*G^g*p_g");
        assertEquals("8*f^c*G^d*k^a*k^b*p_c*p_d*q_a*q_b-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*k_c*f_d*G^d*G^e*k_e*G^f*p_f*G^g*q_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*k_c*f_d*G^d*G^e*k_e*G^f*q_f*G^g*p_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*p_c*G^d*k_d*G^e*q_e*G^f*k_f*f_g*G^g");
        assertEquals("-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*p_c*G^d*k_d*G^e*q_e*f_f*G^f*G^g*k_g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d+8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d-8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*p_c*G^d*k_d*G^e*k_e*G^f*q_f*f_g*G^g");
        assertEquals("4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*p_c*G^d*k_d*G^e*k_e*f_f*G^f*G^g*q_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*p_c*G^d*k_d*f_e*G^e*G^f*q_f*G^g*k_g");
        assertEquals("-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d-8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*p_c*G^d*k_d*f_e*G^e*G^f*k_f*G^g*q_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*p_c*G^d*q_d*G^e*k_e*G^f*k_f*f_g*G^g");
        assertEquals("4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*p_c*G^d*q_d*G^e*k_e*f_f*G^f*G^g*k_g");
        assertEquals("-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*p_c*G^d*q_d*f_e*G^e*G^f*k_f*G^g*k_g");
        assertEquals("4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*p_c*f_d*G^d*G^e*k_e*G^f*q_f*G^g*k_g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*p_c*f_d*G^d*G^e*k_e*G^f*k_f*G^g*q_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*p_c*f_d*G^d*G^e*q_e*G^f*k_f*G^g*k_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*q_c*G^d*k_d*G^e*p_e*G^f*k_f*f_g*G^g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*q_c*G^d*k_d*G^e*p_e*f_f*G^f*G^g*k_g");
        assertEquals("-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*q_c*G^d*k_d*G^e*k_e*G^f*p_f*f_g*G^g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*q_c*G^d*k_d*G^e*k_e*f_f*G^f*G^g*p_g");
        assertEquals("2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*q_c*G^d*k_d*f_e*G^e*G^f*p_f*G^g*k_g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*q_c*G^d*k_d*f_e*G^e*G^f*k_f*G^g*p_g");
        assertEquals("-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*q_c*G^d*p_d*G^e*k_e*G^f*k_f*f_g*G^g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*q_c*G^d*p_d*G^e*k_e*f_f*G^f*G^g*k_g");
        assertEquals("2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*q_c*G^d*p_d*f_e*G^e*G^f*k_f*G^g*k_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*q_c*f_d*G^d*G^e*k_e*G^f*p_f*G^g*k_g");
        assertEquals("-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*q_c*f_d*G^d*G^e*k_e*G^f*k_f*G^g*p_g");
        assertEquals("2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*G^c*q_c*f_d*G^d*G^e*p_e*G^f*k_f*G^g*k_g");
        assertEquals("2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*f_c*G^c*G^d*k_d*G^e*p_e*G^f*q_f*G^g*k_g");
        assertEquals("-8*f^c*G^d*k^a*k^b*p_c*p_d*q_a*q_b+4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-8*f^c*G^d*k^a*k^b*p_a*p_b*q_c*q_d+8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d+8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e+4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*f_c*G^c*G^d*k_d*G^e*p_e*G^f*k_f*G^g*q_g");
        assertEquals("8*f^c*G^d*k^a*k^b*p_a*p_b*q_c*q_d-8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e+4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*f_c*G^c*G^d*k_d*G^e*q_e*G^f*p_f*G^g*k_g");
        assertEquals("8*f^c*G^d*k^a*k^b*p_c*p_d*q_a*q_b-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+8*f^c*G^d*k^a*k^b*p_a*p_b*q_c*q_d-8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d-8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*f_c*G^c*G^d*k_d*G^e*q_e*G^f*k_f*G^g*p_g");
        assertEquals("-8*f^c*G^d*k^a*k^b*p_c*p_d*q_a*q_b+4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e+4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*f_c*G^c*G^d*k_d*G^e*k_e*G^f*p_f*G^g*q_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*f_c*G^c*G^d*k_d*G^e*k_e*G^f*q_f*G^g*p_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*f_c*G^c*G^d*p_d*G^e*k_e*G^f*q_f*G^g*k_g");
        assertEquals("8*f^c*G^d*k^a*k^b*p_c*p_d*q_a*q_b-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*f_c*G^c*G^d*p_d*G^e*k_e*G^f*k_f*G^g*q_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*f_c*G^c*G^d*p_d*G^e*q_e*G^f*k_f*G^g*k_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*f_c*G^c*G^d*q_d*G^e*k_e*G^f*p_f*G^g*k_g");
        assertEquals("-8*f^c*G^d*k^a*k^b*p_a*p_b*q_c*q_d+8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e+4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*f_c*G^c*G^d*q_d*G^e*k_e*G^f*k_f*G^g*p_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*q_b*f_c*G^c*G^d*q_d*G^e*p_e*G^f*k_f*G^g*k_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*q_c*G^d*p_d*G^e*q_e*G^f*k_f*f_g*G^g");
        assertEquals("-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*q_c*G^d*p_d*G^e*q_e*f_f*G^f*G^g*k_g");
        assertEquals("4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d+8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d-8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e+4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*q_c*G^d*p_d*G^e*k_e*G^f*q_f*f_g*G^g");
        assertEquals("-8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d+8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*q_c*G^d*p_d*G^e*k_e*f_f*G^f*G^g*q_g");
        assertEquals("8*f^c*G^d*k^a*k^b*p_a*p_b*q_c*q_d-8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e+4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*q_c*G^d*p_d*f_e*G^e*G^f*q_f*G^g*k_g");
        assertEquals("8*f^c*G^d*k^a*k^b*p_a*p_b*q_c*q_d-8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d-8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*q_c*G^d*p_d*f_e*G^e*G^f*k_f*G^g*q_g");
        assertEquals("-8*f^c*G^d*k^a*k^b*p_a*p_b*q_c*q_d+8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*q_c*G^d*q_d*G^e*p_e*G^f*k_f*f_g*G^g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*q_c*G^d*q_d*G^e*p_e*f_f*G^f*G^g*k_g");
        assertEquals("-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*q_c*G^d*q_d*G^e*k_e*G^f*p_f*f_g*G^g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*q_c*G^d*q_d*G^e*k_e*f_f*G^f*G^g*p_g");
        assertEquals("2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*q_c*G^d*q_d*f_e*G^e*G^f*p_f*G^g*k_g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*q_c*G^d*q_d*f_e*G^e*G^f*k_f*G^g*p_g");
        assertEquals("-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*q_c*G^d*k_d*G^e*p_e*G^f*q_f*f_g*G^g");
        assertEquals("8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d-8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*q_c*G^d*k_d*G^e*p_e*f_f*G^f*G^g*q_g");
        assertEquals("8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*q_c*G^d*k_d*G^e*q_e*G^f*p_f*f_g*G^g");
        assertEquals("-8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d+8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*q_c*G^d*k_d*G^e*q_e*f_f*G^f*G^g*p_g");
        assertEquals("8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d-8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e+4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*q_c*G^d*k_d*f_e*G^e*G^f*p_f*G^g*q_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e+4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*q_c*G^d*k_d*f_e*G^e*G^f*q_f*G^g*p_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*q_c*f_d*G^d*G^e*p_e*G^f*q_f*G^g*k_g");
        assertEquals("-8*f^c*G^d*k^a*k^b*p_a*p_b*q_c*q_d+8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d+8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d-8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e+4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*q_c*f_d*G^d*G^e*p_e*G^f*k_f*G^g*q_g");
        assertEquals("8*f^c*G^d*k^a*k^b*p_a*p_b*q_c*q_d-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e+4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*q_c*f_d*G^d*G^e*q_e*G^f*p_f*G^g*k_g");
        assertEquals("8*f^c*G^d*k^a*k^b*p_a*p_b*q_c*q_d-8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*q_c*f_d*G^d*G^e*q_e*G^f*k_f*G^g*p_g");
        assertEquals("8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*q_c*f_d*G^d*G^e*k_e*G^f*p_f*G^g*q_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*q_c*f_d*G^d*G^e*k_e*G^f*q_f*G^g*p_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d-8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e+4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*p_c*G^d*q_d*G^e*q_e*G^f*k_f*f_g*G^g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*p_c*G^d*q_d*G^e*q_e*f_f*G^f*G^g*k_g");
        assertEquals("-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*p_c*G^d*q_d*G^e*k_e*G^f*q_f*f_g*G^g");
        assertEquals("8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d-8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*p_c*G^d*q_d*G^e*k_e*f_f*G^f*G^g*q_g");
        assertEquals("-8*f^c*G^d*k^a*k^b*p_a*p_b*q_c*q_d+8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*p_c*G^d*q_d*f_e*G^e*G^f*q_f*G^g*k_g");
        assertEquals("-8*f^c*G^d*k^a*k^b*p_a*p_b*q_c*q_d+8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e+4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*p_c*G^d*q_d*f_e*G^e*G^f*k_f*G^g*q_g");
        assertEquals("8*f^c*G^d*k^a*k^b*p_a*p_b*q_c*q_d-8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e+4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*p_c*G^d*k_d*G^e*q_e*G^f*q_f*f_g*G^g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*p_c*G^d*k_d*G^e*q_e*f_f*G^f*G^g*q_g");
        assertEquals("8*f^c*G^d*k^a*k^b*p_a*p_b*q_c*q_d-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*p_c*G^d*k_d*f_e*G^e*G^f*q_f*G^g*q_g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*p_c*f_d*G^d*G^e*q_e*G^f*q_f*G^g*k_g");
        assertEquals("-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*p_c*f_d*G^d*G^e*q_e*G^f*k_f*G^g*q_g");
        assertEquals("8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*p_c*f_d*G^d*G^e*k_e*G^f*q_f*G^g*q_g");
        assertEquals("-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*k_c*G^d*q_d*G^e*p_e*G^f*q_f*f_g*G^g");
        assertEquals("4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*k_c*G^d*q_d*G^e*p_e*f_f*G^f*G^g*q_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*k_c*G^d*q_d*G^e*q_e*G^f*p_f*f_g*G^g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*k_c*G^d*q_d*G^e*q_e*f_f*G^f*G^g*p_g");
        assertEquals("2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*k_c*G^d*q_d*f_e*G^e*G^f*p_f*G^g*q_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*k_c*G^d*q_d*f_e*G^e*G^f*q_f*G^g*p_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*k_c*G^d*p_d*G^e*q_e*G^f*q_f*f_g*G^g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*k_c*G^d*p_d*G^e*q_e*f_f*G^f*G^g*q_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*k_c*G^d*p_d*f_e*G^e*G^f*q_f*G^g*q_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*k_c*f_d*G^d*G^e*q_e*G^f*p_f*G^g*q_g");
        assertEquals("4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*k_c*f_d*G^d*G^e*q_e*G^f*q_f*G^g*p_g");
        assertEquals("2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*G^c*k_c*f_d*G^d*G^e*p_e*G^f*q_f*G^g*q_g");
        assertEquals("2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*f_c*G^c*G^d*q_d*G^e*p_e*G^f*q_f*G^g*k_g");
        assertEquals("4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d-8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*f_c*G^c*G^d*q_d*G^e*p_e*G^f*k_f*G^g*q_g");
        assertEquals("-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*f_c*G^c*G^d*q_d*G^e*q_e*G^f*p_f*G^g*k_g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*f_c*G^c*G^d*q_d*G^e*q_e*G^f*k_f*G^g*p_g");
        assertEquals("-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*f_c*G^c*G^d*q_d*G^e*k_e*G^f*p_f*G^g*q_g");
        assertEquals("4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e+4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*f_c*G^c*G^d*q_d*G^e*k_e*G^f*q_f*G^g*p_g");
        assertEquals("-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*f_c*G^c*G^d*p_d*G^e*q_e*G^f*q_f*G^g*k_g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*f_c*G^c*G^d*p_d*G^e*q_e*G^f*k_f*G^g*q_g");
        assertEquals("4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e+4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*f_c*G^c*G^d*p_d*G^e*k_e*G^f*q_f*G^g*q_g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*f_c*G^c*G^d*k_d*G^e*q_e*G^f*p_f*G^g*q_g");
        assertEquals("-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*f_c*G^c*G^d*k_d*G^e*q_e*G^f*q_f*G^g*p_g");
        assertEquals("-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*k_b*f_c*G^c*G^d*k_d*G^e*p_e*G^f*q_f*G^g*q_g");
        assertEquals("-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*G^c*q_c*G^d*k_d*G^e*q_e*G^f*k_f*f_g*G^g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*G^c*q_c*G^d*k_d*G^e*q_e*f_f*G^f*G^g*k_g");
        assertEquals("-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*G^c*q_c*G^d*k_d*G^e*k_e*G^f*q_f*f_g*G^g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*G^c*q_c*G^d*k_d*G^e*k_e*f_f*G^f*G^g*q_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*G^c*q_c*G^d*k_d*f_e*G^e*G^f*q_f*G^g*k_g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*G^c*q_c*G^d*k_d*f_e*G^e*G^f*k_f*G^g*q_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*G^c*q_c*G^d*q_d*G^e*k_e*G^f*k_f*f_g*G^g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*G^c*q_c*G^d*q_d*G^e*k_e*f_f*G^f*G^g*k_g");
        assertEquals("2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*G^c*q_c*G^d*q_d*f_e*G^e*G^f*k_f*G^g*k_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*G^c*q_c*f_d*G^d*G^e*k_e*G^f*q_f*G^g*k_g");
        assertEquals("-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*G^c*q_c*f_d*G^d*G^e*k_e*G^f*k_f*G^g*q_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*G^c*q_c*f_d*G^d*G^e*q_e*G^f*k_f*G^g*k_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*G^c*k_c*G^d*q_d*G^e*q_e*G^f*k_f*f_g*G^g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*G^c*k_c*G^d*q_d*G^e*q_e*f_f*G^f*G^g*k_g");
        assertEquals("2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*G^c*k_c*G^d*q_d*G^e*k_e*G^f*q_f*f_g*G^g");
        assertEquals("4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*G^c*k_c*G^d*q_d*G^e*k_e*f_f*G^f*G^g*q_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*G^c*k_c*G^d*q_d*f_e*G^e*G^f*q_f*G^g*k_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*G^c*k_c*G^d*q_d*f_e*G^e*G^f*k_f*G^g*q_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*G^c*k_c*G^d*k_d*G^e*q_e*G^f*q_f*f_g*G^g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*G^c*k_c*G^d*k_d*G^e*q_e*f_f*G^f*G^g*q_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*G^c*k_c*G^d*k_d*f_e*G^e*G^f*q_f*G^g*q_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*G^c*k_c*f_d*G^d*G^e*q_e*G^f*q_f*G^g*k_g");
        assertEquals("2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*G^c*k_c*f_d*G^d*G^e*q_e*G^f*k_f*G^g*q_g");
        assertEquals("4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*G^c*k_c*f_d*G^d*G^e*k_e*G^f*q_f*G^g*q_g");
        assertEquals("2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*f_c*G^c*G^d*q_d*G^e*k_e*G^f*q_f*G^g*k_g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*f_c*G^c*G^d*q_d*G^e*k_e*G^f*k_f*G^g*q_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*f_c*G^c*G^d*q_d*G^e*q_e*G^f*k_f*G^g*k_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*f_c*G^c*G^d*k_d*G^e*q_e*G^f*q_f*G^g*k_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*f_c*G^c*G^d*k_d*G^e*q_e*G^f*k_f*G^g*q_g");
        assertEquals("2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*G^b*p_b*f_c*G^c*G^d*k_d*G^e*k_e*G^f*q_f*G^g*q_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*f_b*G^b*G^c*q_c*G^d*k_d*G^e*p_e*G^f*q_f*G^g*k_g");
        assertEquals("8*f^c*G^d*k^a*k^b*p_c*p_d*q_a*q_b-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*f_b*G^b*G^c*q_c*G^d*k_d*G^e*p_e*G^f*k_f*G^g*q_g");
        assertEquals("8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*f_b*G^b*G^c*q_c*G^d*k_d*G^e*q_e*G^f*p_f*G^g*k_g");
        assertEquals("-8*f^c*G^d*k^a*k^b*p_c*p_d*q_a*q_b+4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d+8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e+4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*f_b*G^b*G^c*q_c*G^d*k_d*G^e*q_e*G^f*k_f*G^g*p_g");
        assertEquals("8*f^c*G^d*k^a*k^b*p_c*p_d*q_a*q_b-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*f_b*G^b*G^c*q_c*G^d*k_d*G^e*k_e*G^f*p_f*G^g*q_g");
        assertEquals("4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*f_b*G^b*G^c*q_c*G^d*k_d*G^e*k_e*G^f*q_f*G^g*p_g");
        assertEquals("2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*f_b*G^b*G^c*q_c*G^d*p_d*G^e*k_e*G^f*q_f*G^g*k_g");
        assertEquals("-8*f^c*G^d*k^a*k^b*p_c*p_d*q_a*q_b+4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*f_b*G^b*G^c*q_c*G^d*p_d*G^e*k_e*G^f*k_f*G^g*q_g");
        assertEquals("4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*f_b*G^b*G^c*q_c*G^d*p_d*G^e*q_e*G^f*k_f*G^g*k_g");
        assertEquals("4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*f_b*G^b*G^c*q_c*G^d*q_d*G^e*k_e*G^f*p_f*G^g*k_g");
        assertEquals("-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*f_b*G^b*G^c*q_c*G^d*q_d*G^e*k_e*G^f*k_f*G^g*p_g");
        assertEquals("2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*f_b*G^b*G^c*q_c*G^d*q_d*G^e*p_e*G^f*k_f*G^g*k_g");
        assertEquals("2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*f_b*G^b*G^c*k_c*G^d*q_d*G^e*p_e*G^f*q_f*G^g*k_g");
        assertEquals("-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e+4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*f_b*G^b*G^c*k_c*G^d*q_d*G^e*p_e*G^f*k_f*G^g*q_g");
        assertEquals("4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e+4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*f_b*G^b*G^c*k_c*G^d*q_d*G^e*q_e*G^f*p_f*G^g*k_g");
        assertEquals("-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*f_b*G^b*G^c*k_c*G^d*q_d*G^e*q_e*G^f*k_f*G^g*p_g");
        assertEquals("2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*f_b*G^b*G^c*k_c*G^d*q_d*G^e*k_e*G^f*p_f*G^g*q_g");
        assertEquals("-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*f_b*G^b*G^c*k_c*G^d*q_d*G^e*k_e*G^f*q_f*G^g*p_g");
        assertEquals("8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e+4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*f_b*G^b*G^c*k_c*G^d*p_d*G^e*q_e*G^f*q_f*G^g*k_g");
        assertEquals("-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*f_b*G^b*G^c*k_c*G^d*p_d*G^e*q_e*G^f*k_f*G^g*q_g");
        assertEquals("4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*f_b*G^b*G^c*k_c*G^d*p_d*G^e*k_e*G^f*q_f*G^g*q_g");
        assertEquals("-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*p_a*f_b*G^b*G^c*k_c*G^d*k_d*G^e*q_e*G^f*p_f*G^g*q_g");
        assertEquals("4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*f_b*G^b*G^c*k_c*G^d*k_d*G^e*q_e*G^f*q_f*G^g*p_g");
        assertEquals("2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*f_b*G^b*G^c*k_c*G^d*k_d*G^e*p_e*G^f*q_f*G^g*q_g");
        assertEquals("2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*f_b*G^b*G^c*p_c*G^d*q_d*G^e*k_e*G^f*q_f*G^g*k_g");
        assertEquals("8*f^c*G^d*k^a*k^b*p_c*p_d*q_a*q_b-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*f_b*G^b*G^c*p_c*G^d*q_d*G^e*k_e*G^f*k_f*G^g*q_g");
        assertEquals("2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*f_b*G^b*G^c*p_c*G^d*q_d*G^e*q_e*G^f*k_f*G^g*k_g");
        assertEquals("2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*f_b*G^b*G^c*p_c*G^d*k_d*G^e*q_e*G^f*q_f*G^g*k_g");
        assertEquals("2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*f_b*G^b*G^c*p_c*G^d*k_d*G^e*q_e*G^f*k_f*G^g*q_g");
        assertEquals("8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*p_a*f_b*G^b*G^c*p_c*G^d*k_d*G^e*k_e*G^f*q_f*G^g*q_g");
        assertEquals("2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*k_c*G^d*p_d*G^e*q_e*G^f*k_f*f_g*G^g");
        assertEquals("-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d+8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*k_c*G^d*p_d*G^e*q_e*f_f*G^f*G^g*k_g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*k_c*G^d*p_d*G^e*k_e*G^f*q_f*f_g*G^g");
        assertEquals("-8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d+8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d+8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d-8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*k_c*G^d*p_d*G^e*k_e*f_f*G^f*G^g*q_g");
        assertEquals("8*f^c*G^d*k^a*k^b*p_a*p_b*q_c*q_d-8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e+4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*k_c*G^d*p_d*f_e*G^e*G^f*q_f*G^g*k_g");
        assertEquals("-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+8*f^c*G^d*k^a*k^b*p_a*p_b*q_c*q_d-8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*k_c*G^d*p_d*f_e*G^e*G^f*k_f*G^g*q_g");
        assertEquals("-8*f^c*G^d*k^a*k^b*p_a*p_b*q_c*q_d+8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*k_c*G^d*q_d*G^e*p_e*G^f*k_f*f_g*G^g");
        assertEquals("4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d-8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*k_c*G^d*q_d*G^e*p_e*f_f*G^f*G^g*k_g");
        assertEquals("8*f^c*G^d*k_c*k_d*p^a*p^b*q_a*q_b-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d+8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d-8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*k_c*G^d*q_d*G^e*k_e*G^f*p_f*f_g*G^g");
        assertEquals("-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d+8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*k_c*G^d*q_d*G^e*k_e*f_f*G^f*G^g*p_g");
        assertEquals("-8*f^c*G^d*k^a*k^b*p_c*p_d*q_a*q_b+4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e+4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*k_c*G^d*q_d*f_e*G^e*G^f*p_f*G^g*k_g");
        assertEquals("-8*f^c*G^d*k^a*k^b*p_c*p_d*q_a*q_b-8*f^c*G^d*k_c*k_d*p^a*p^b*q_a*q_b+4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d-8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d+8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*k_c*G^d*q_d*f_e*G^e*G^f*k_f*G^g*p_g");
        assertEquals("8*f^c*G^d*k^a*k^b*p_c*p_d*q_a*q_b+8*f^c*G^d*k_c*k_d*p^a*p^b*q_a*q_b-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d-8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*k_c*G^d*k_d*G^e*p_e*G^f*q_f*f_g*G^g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*k_c*G^d*k_d*G^e*p_e*f_f*G^f*G^g*q_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*k_c*G^d*k_d*G^e*q_e*G^f*p_f*f_g*G^g");
        assertEquals("4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*k_c*G^d*k_d*G^e*q_e*f_f*G^f*G^g*p_g");
        assertEquals("-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*k_c*G^d*k_d*f_e*G^e*G^f*p_f*G^g*q_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*k_c*G^d*k_d*f_e*G^e*G^f*q_f*G^g*p_g");
        assertEquals("4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*k_c*f_d*G^d*G^e*p_e*G^f*q_f*G^g*k_g");
        assertEquals("-8*f^c*G^d*k^a*k^b*p_c*p_d*q_a*q_b+4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-8*f^c*G^d*k^a*k^b*p_a*p_b*q_c*q_d+8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d+8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*k_c*f_d*G^d*G^e*p_e*G^f*k_f*G^g*q_g");
        assertEquals("8*f^c*G^d*k^a*k^b*p_a*p_b*q_c*q_d-8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e+4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*k_c*f_d*G^d*G^e*q_e*G^f*p_f*G^g*k_g");
        assertEquals("8*f^c*G^d*k^a*k^b*p_c*p_d*q_a*q_b+8*f^c*G^d*k_c*k_d*p^a*p^b*q_a*q_b-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+8*f^c*G^d*k^a*k^b*p_a*p_b*q_c*q_d-8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d-8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d-8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d-8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*k_c*f_d*G^d*G^e*q_e*G^f*k_f*G^g*p_g");
        assertEquals("-8*f^c*G^d*k^a*k^b*p_c*p_d*q_a*q_b-8*f^c*G^d*k_c*k_d*p^a*p^b*q_a*q_b+4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e+4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*k_c*f_d*G^d*G^e*k_e*G^f*p_f*G^g*q_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*k_c*f_d*G^d*G^e*k_e*G^f*q_f*G^g*p_g");
        assertEquals("8*f^c*G^d*k_c*k_d*p^a*p^b*q_a*q_b-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*p_c*G^d*k_d*G^e*q_e*G^f*k_f*f_g*G^g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*p_c*G^d*k_d*G^e*q_e*f_f*G^f*G^g*k_g");
        assertEquals("-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*p_c*G^d*k_d*G^e*k_e*G^f*q_f*f_g*G^g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*p_c*G^d*k_d*G^e*k_e*f_f*G^f*G^g*q_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*p_c*G^d*k_d*f_e*G^e*G^f*q_f*G^g*k_g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*p_c*G^d*k_d*f_e*G^e*G^f*k_f*G^g*q_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*p_c*G^d*q_d*G^e*k_e*G^f*k_f*f_g*G^g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*p_c*G^d*q_d*G^e*k_e*f_f*G^f*G^g*k_g");
        assertEquals("2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*p_c*G^d*q_d*f_e*G^e*G^f*k_f*G^g*k_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*p_c*f_d*G^d*G^e*k_e*G^f*q_f*G^g*k_g");
        assertEquals("-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*p_c*f_d*G^d*G^e*k_e*G^f*k_f*G^g*q_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*p_c*f_d*G^d*G^e*q_e*G^f*k_f*G^g*k_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*q_c*G^d*k_d*G^e*p_e*G^f*k_f*f_g*G^g");
        assertEquals("-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d+8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*q_c*G^d*k_d*G^e*p_e*f_f*G^f*G^g*k_g");
        assertEquals("-8*f^c*G^d*k_c*k_d*p^a*p^b*q_a*q_b+4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d-8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*q_c*G^d*k_d*G^e*k_e*G^f*p_f*f_g*G^g");
        assertEquals("4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*q_c*G^d*k_d*G^e*k_e*f_f*G^f*G^g*p_g");
        assertEquals("-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*q_c*G^d*k_d*f_e*G^e*G^f*p_f*G^g*k_g");
        assertEquals("8*f^c*G^d*k_c*k_d*p^a*p^b*q_a*q_b-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d+8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d-8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*q_c*G^d*k_d*f_e*G^e*G^f*k_f*G^g*p_g");
        assertEquals("-8*f^c*G^d*k_c*k_d*p^a*p^b*q_a*q_b+4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*q_c*G^d*p_d*G^e*k_e*G^f*k_f*f_g*G^g");
        assertEquals("4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*q_c*G^d*p_d*G^e*k_e*f_f*G^f*G^g*k_g");
        assertEquals("8*f^c*G^d*k_c*k_d*p^a*p^b*q_a*q_b-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d-8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*q_c*G^d*p_d*f_e*G^e*G^f*k_f*G^g*k_g");
        assertEquals("4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*q_c*f_d*G^d*G^e*k_e*G^f*p_f*G^g*k_g");
        assertEquals("4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*q_c*f_d*G^d*G^e*k_e*G^f*k_f*G^g*p_g");
        assertEquals("-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*G^c*q_c*f_d*G^d*G^e*p_e*G^f*k_f*G^g*k_g");
        assertEquals("-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*f_c*G^c*G^d*k_d*G^e*p_e*G^f*q_f*G^g*k_g");
        assertEquals("8*f^c*G^d*k^a*k^b*p_c*p_d*q_a*q_b-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+8*f^c*G^d*k^a*k^b*p_a*p_b*q_c*q_d-8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d-8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*f_c*G^c*G^d*k_d*G^e*p_e*G^f*k_f*G^g*q_g");
        assertEquals("-8*f^c*G^d*k^a*k^b*p_a*p_b*q_c*q_d+8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*f_c*G^c*G^d*k_d*G^e*q_e*G^f*p_f*G^g*k_g");
        assertEquals("-8*f^c*G^d*k^a*k^b*p_c*p_d*q_a*q_b+4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-8*f^c*G^d*k^a*k^b*p_a*p_b*q_c*q_d+8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d+8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*f_c*G^c*G^d*k_d*G^e*q_e*G^f*k_f*G^g*p_g");
        assertEquals("8*f^c*G^d*k^a*k^b*p_c*p_d*q_a*q_b-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*f_c*G^c*G^d*k_d*G^e*k_e*G^f*p_f*G^g*q_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*f_c*G^c*G^d*k_d*G^e*k_e*G^f*q_f*G^g*p_g");
        assertEquals("4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*f_c*G^c*G^d*p_d*G^e*k_e*G^f*q_f*G^g*k_g");
        assertEquals("-8*f^c*G^d*k^a*k^b*p_c*p_d*q_a*q_b+4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*f_c*G^c*G^d*p_d*G^e*k_e*G^f*k_f*G^g*q_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*f_c*G^c*G^d*p_d*G^e*q_e*G^f*k_f*G^g*k_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*f_c*G^c*G^d*q_d*G^e*k_e*G^f*p_f*G^g*k_g");
        assertEquals("-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+8*f^c*G^d*k^a*k^b*p_a*p_b*q_c*q_d-8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*f_c*G^c*G^d*q_d*G^e*k_e*G^f*k_f*G^g*p_g");
        assertEquals("4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*p_b*f_c*G^c*G^d*q_d*G^e*p_e*G^f*k_f*G^g*k_g");
        assertEquals("4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*p_c*G^d*p_d*G^e*q_e*G^f*k_f*f_g*G^g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*p_c*G^d*p_d*G^e*q_e*f_f*G^f*G^g*k_g");
        assertEquals("-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*p_c*G^d*p_d*G^e*k_e*G^f*q_f*f_g*G^g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*p_c*G^d*p_d*G^e*k_e*f_f*G^f*G^g*q_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*p_c*G^d*p_d*f_e*G^e*G^f*q_f*G^g*k_g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*p_c*G^d*p_d*f_e*G^e*G^f*k_f*G^g*q_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*p_c*G^d*q_d*G^e*p_e*G^f*k_f*f_g*G^g");
        assertEquals("-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d+8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*p_c*G^d*q_d*G^e*p_e*f_f*G^f*G^g*k_g");
        assertEquals("-8*f^c*G^d*k_c*k_d*p^a*p^b*q_a*q_b+4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d-8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*p_c*G^d*q_d*G^e*k_e*G^f*p_f*f_g*G^g");
        assertEquals("4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d-8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*p_c*G^d*q_d*G^e*k_e*f_f*G^f*G^g*p_g");
        assertEquals("8*f^c*G^d*k^a*k^b*p_c*p_d*q_a*q_b-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*p_c*G^d*q_d*f_e*G^e*G^f*p_f*G^g*k_g");
        assertEquals("8*f^c*G^d*k^a*k^b*p_c*p_d*q_a*q_b+8*f^c*G^d*k_c*k_d*p^a*p^b*q_a*q_b-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d+8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d-8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d-8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*p_c*G^d*q_d*f_e*G^e*G^f*k_f*G^g*p_g");
        assertEquals("-8*f^c*G^d*k^a*k^b*p_c*p_d*q_a*q_b-8*f^c*G^d*k_c*k_d*p^a*p^b*q_a*q_b+4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e+4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*p_c*G^d*k_d*G^e*p_e*G^f*q_f*f_g*G^g");
        assertEquals("8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d-8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d-8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d+8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d+4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*p_c*G^d*k_d*G^e*p_e*f_f*G^f*G^g*q_g");
        assertEquals("8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*p_c*G^d*k_d*G^e*q_e*G^f*p_f*f_g*G^g");
        assertEquals("-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d+8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*p_c*G^d*k_d*G^e*q_e*f_f*G^f*G^g*p_g");
        assertEquals("4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*p_c*G^d*k_d*f_e*G^e*G^f*p_f*G^g*q_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e+4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*p_c*G^d*k_d*f_e*G^e*G^f*q_f*G^g*p_g");
        assertEquals("-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*p_c*f_d*G^d*G^e*p_e*G^f*q_f*G^g*k_g");
        assertEquals("8*f^c*G^d*k^a*k^b*p_c*p_d*q_a*q_b-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*p_c*f_d*G^d*G^e*p_e*G^f*k_f*G^g*q_g");
        assertEquals("8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*p_c*f_d*G^d*G^e*q_e*G^f*p_f*G^g*k_g");
        assertEquals("-8*f^c*G^d*k^a*k^b*p_c*p_d*q_a*q_b-8*f^c*G^d*k_c*k_d*p^a*p^b*q_a*q_b+4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d-8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d+8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*p_c*f_d*G^d*G^e*q_e*G^f*k_f*G^g*p_g");
        assertEquals("8*f^c*G^d*k^a*k^b*p_c*p_d*q_a*q_b+8*f^c*G^d*k_c*k_d*p^a*p^b*q_a*q_b-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d-8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d-8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*p_c*f_d*G^d*G^e*k_e*G^f*p_f*G^g*q_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*p_c*f_d*G^d*G^e*k_e*G^f*q_f*G^g*p_g");
        assertEquals("-8*f^c*G^d*k_c*k_d*p^a*p^b*q_a*q_b+4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e+4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*q_c*G^d*p_d*G^e*p_e*G^f*k_f*f_g*G^g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*q_c*G^d*p_d*G^e*p_e*f_f*G^f*G^g*k_g");
        assertEquals("-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*q_c*G^d*p_d*G^e*k_e*G^f*p_f*f_g*G^g");
        assertEquals("-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d+8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*q_c*G^d*p_d*G^e*k_e*f_f*G^f*G^g*p_g");
        assertEquals("-8*f^c*G^d*k^a*k^b*p_c*p_d*q_a*q_b+4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e+4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*q_c*G^d*p_d*f_e*G^e*G^f*p_f*G^g*k_g");
        assertEquals("-8*f^c*G^d*k^a*k^b*p_c*p_d*q_a*q_b+4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+8*f^a*G^c*k^b*k^d*p_a*p_b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*q_c*G^d*p_d*f_e*G^e*G^f*k_f*G^g*p_g");
        assertEquals("8*f^c*G^d*k^a*k^b*p_c*p_d*q_a*q_b-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*q_c*G^d*k_d*G^e*p_e*G^f*p_f*f_g*G^g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*q_c*G^d*k_d*G^e*p_e*f_f*G^f*G^g*p_g");
        assertEquals("8*f^c*G^d*k^a*k^b*p_c*p_d*q_a*q_b-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*q_c*G^d*k_d*f_e*G^e*G^f*p_f*G^g*p_g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*q_c*f_d*G^d*G^e*p_e*G^f*p_f*G^g*k_g");
        assertEquals("-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*q_c*f_d*G^d*G^e*p_e*G^f*k_f*G^g*p_g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*q_c*f_d*G^d*G^e*k_e*G^f*p_f*G^g*p_g");
        assertEquals("-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*k_c*G^d*p_d*G^e*p_e*G^f*q_f*f_g*G^g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*k_c*G^d*p_d*G^e*p_e*f_f*G^f*G^g*q_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*k_c*G^d*p_d*G^e*q_e*G^f*p_f*f_g*G^g");
        assertEquals("4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*k_c*G^d*p_d*G^e*q_e*f_f*G^f*G^g*p_g");
        assertEquals("-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*k_c*G^d*p_d*f_e*G^e*G^f*p_f*G^g*q_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*k_c*G^d*p_d*f_e*G^e*G^f*q_f*G^g*p_g");
        assertEquals("4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*k_c*G^d*q_d*G^e*p_e*G^f*p_f*f_g*G^g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*k_c*G^d*q_d*G^e*p_e*f_f*G^f*G^g*p_g");
        assertEquals("2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*k_c*G^d*q_d*f_e*G^e*G^f*p_f*G^g*p_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*k_c*f_d*G^d*G^e*p_e*G^f*p_f*G^g*q_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*k_c*f_d*G^d*G^e*p_e*G^f*q_f*G^g*p_g");
        assertEquals("-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*G^c*k_c*f_d*G^d*G^e*q_e*G^f*p_f*G^g*p_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*f_c*G^c*G^d*p_d*G^e*p_e*G^f*q_f*G^g*k_g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*f_c*G^c*G^d*p_d*G^e*p_e*G^f*k_f*G^g*q_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*f_c*G^c*G^d*p_d*G^e*q_e*G^f*p_f*G^g*k_g");
        assertEquals("8*f^c*G^d*k_c*k_d*p^a*p^b*q_a*q_b-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d+8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d-8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*f_c*G^c*G^d*p_d*G^e*q_e*G^f*k_f*G^g*p_g");
        assertEquals("-8*f^c*G^d*k_c*k_d*p^a*p^b*q_a*q_b+4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e+4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*f_c*G^c*G^d*p_d*G^e*k_e*G^f*p_f*G^g*q_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e+4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*f_c*G^c*G^d*p_d*G^e*k_e*G^f*q_f*G^g*p_g");
        assertEquals("8*f^c*G^d*k_c*k_d*p^a*p^b*q_a*q_b-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d-8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*f_c*G^c*G^d*q_d*G^e*p_e*G^f*p_f*G^g*k_g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*f_c*G^c*G^d*q_d*G^e*p_e*G^f*k_f*G^g*p_g");
        assertEquals("-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*f_c*G^c*G^d*q_d*G^e*k_e*G^f*p_f*G^g*p_g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*f_c*G^c*G^d*k_d*G^e*p_e*G^f*p_f*G^g*q_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*f_c*G^c*G^d*k_d*G^e*p_e*G^f*q_f*G^g*p_g");
        assertEquals("-8*f^c*G^d*k_c*k_d*p^a*p^b*q_a*q_b+4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*k_b*f_c*G^c*G^d*k_d*G^e*q_e*G^f*p_f*G^g*p_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*q_b*G^c*p_c*G^d*k_d*G^e*p_e*G^f*k_f*f_g*G^g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*q_b*G^c*p_c*G^d*k_d*G^e*p_e*f_f*G^f*G^g*k_g");
        assertEquals("-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*q_b*G^c*p_c*G^d*k_d*G^e*k_e*G^f*p_f*f_g*G^g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*q_b*G^c*p_c*G^d*k_d*G^e*k_e*f_f*G^f*G^g*p_g");
        assertEquals("2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*q_b*G^c*p_c*G^d*k_d*f_e*G^e*G^f*p_f*G^g*k_g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*q_b*G^c*p_c*G^d*k_d*f_e*G^e*G^f*k_f*G^g*p_g");
        assertEquals("-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*q_b*G^c*p_c*G^d*p_d*G^e*k_e*G^f*k_f*f_g*G^g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*q_b*G^c*p_c*G^d*p_d*G^e*k_e*f_f*G^f*G^g*k_g");
        assertEquals("2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*q_b*G^c*p_c*G^d*p_d*f_e*G^e*G^f*k_f*G^g*k_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*q_b*G^c*p_c*f_d*G^d*G^e*k_e*G^f*p_f*G^g*k_g");
        assertEquals("-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*q_b*G^c*p_c*f_d*G^d*G^e*k_e*G^f*k_f*G^g*p_g");
        assertEquals("2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*q_b*G^c*p_c*f_d*G^d*G^e*p_e*G^f*k_f*G^g*k_g");
        assertEquals("2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*q_b*G^c*k_c*G^d*p_d*G^e*p_e*G^f*k_f*f_g*G^g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*q_b*G^c*k_c*G^d*p_d*G^e*p_e*f_f*G^f*G^g*k_g");
        assertEquals("2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*q_b*G^c*k_c*G^d*p_d*G^e*k_e*G^f*p_f*f_g*G^g");
        assertEquals("4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*q_b*G^c*k_c*G^d*p_d*G^e*k_e*f_f*G^f*G^g*p_g");
        assertEquals("-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*q_b*G^c*k_c*G^d*p_d*f_e*G^e*G^f*p_f*G^g*k_g");
        assertEquals("-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*q_b*G^c*k_c*G^d*p_d*f_e*G^e*G^f*k_f*G^g*p_g");
        assertEquals("2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*q_b*G^c*k_c*G^d*k_d*G^e*p_e*G^f*p_f*f_g*G^g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*q_b*G^c*k_c*G^d*k_d*G^e*p_e*f_f*G^f*G^g*p_g");
        assertEquals("2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*q_b*G^c*k_c*G^d*k_d*f_e*G^e*G^f*p_f*G^g*p_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*q_b*G^c*k_c*f_d*G^d*G^e*p_e*G^f*p_f*G^g*k_g");
        assertEquals("2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*q_b*G^c*k_c*f_d*G^d*G^e*p_e*G^f*k_f*G^g*p_g");
        assertEquals("4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*q_b*G^c*k_c*f_d*G^d*G^e*k_e*G^f*p_f*G^g*p_g");
        assertEquals("2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*q_b*f_c*G^c*G^d*p_d*G^e*k_e*G^f*p_f*G^g*k_g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*q_b*f_c*G^c*G^d*p_d*G^e*k_e*G^f*k_f*G^g*p_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*q_b*f_c*G^c*G^d*p_d*G^e*p_e*G^f*k_f*G^g*k_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*q_b*f_c*G^c*G^d*k_d*G^e*p_e*G^f*p_f*G^g*k_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*G^b*q_b*f_c*G^c*G^d*k_d*G^e*p_e*G^f*k_f*G^g*p_g");
        assertEquals("-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*G^b*q_b*f_c*G^c*G^d*k_d*G^e*k_e*G^f*p_f*G^g*p_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*f_b*G^b*G^c*p_c*G^d*k_d*G^e*p_e*G^f*q_f*G^g*k_g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-8*f^c*G^d*k^a*k^b*p_a*p_b*q_c*q_d+8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*f_b*G^b*G^c*p_c*G^d*k_d*G^e*p_e*G^f*k_f*G^g*q_g");
        assertEquals("8*f^c*G^d*k^a*k^b*p_a*p_b*q_c*q_d-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e+4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*f_b*G^b*G^c*p_c*G^d*k_d*G^e*q_e*G^f*p_f*G^g*k_g");
        assertEquals("-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+8*f^c*G^d*k^a*k^b*p_a*p_b*q_c*q_d-8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*f_b*G^b*G^c*p_c*G^d*k_d*G^e*q_e*G^f*k_f*G^g*p_g");
        assertEquals("4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*f_b*G^b*G^c*p_c*G^d*k_d*G^e*k_e*G^f*p_f*G^g*q_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*f_b*G^b*G^c*p_c*G^d*k_d*G^e*k_e*G^f*q_f*G^g*p_g");
        assertEquals("-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*f_b*G^b*G^c*p_c*G^d*p_d*G^e*k_e*G^f*q_f*G^g*k_g");
        assertEquals("-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*f_b*G^b*G^c*p_c*G^d*p_d*G^e*k_e*G^f*k_f*G^g*q_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*f_b*G^b*G^c*p_c*G^d*p_d*G^e*q_e*G^f*k_f*G^g*k_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*f_b*G^b*G^c*p_c*G^d*q_d*G^e*k_e*G^f*p_f*G^g*k_g");
        assertEquals("4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-8*f^c*G^d*k^a*k^b*p_a*p_b*q_c*q_d+8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*f_b*G^b*G^c*p_c*G^d*q_d*G^e*k_e*G^f*k_f*G^g*p_g");
        assertEquals("-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*f_b*G^b*G^c*p_c*G^d*q_d*G^e*p_e*G^f*k_f*G^g*k_g");
        assertEquals("-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*f_b*G^b*G^c*k_c*G^d*p_d*G^e*p_e*G^f*q_f*G^g*k_g");
        assertEquals("-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*f_b*G^b*G^c*k_c*G^d*p_d*G^e*p_e*G^f*k_f*G^g*q_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*f_b*G^b*G^c*k_c*G^d*p_d*G^e*q_e*G^f*p_f*G^g*k_g");
        assertEquals("4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*f_b*G^b*G^c*k_c*G^d*p_d*G^e*q_e*G^f*k_f*G^g*p_g");
        assertEquals("-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*f_b*G^b*G^c*k_c*G^d*p_d*G^e*k_e*G^f*p_f*G^g*q_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*f_b*G^b*G^c*k_c*G^d*p_d*G^e*k_e*G^f*q_f*G^g*p_g");
        assertEquals("4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e+4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*f_b*G^b*G^c*k_c*G^d*q_d*G^e*p_e*G^f*p_f*G^g*k_g");
        assertEquals("-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*f_b*G^b*G^c*k_c*G^d*q_d*G^e*p_e*G^f*k_f*G^g*p_g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e+4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*f_b*G^b*G^c*k_c*G^d*q_d*G^e*k_e*G^f*p_f*G^g*p_g");
        assertEquals("-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*f_b*G^b*G^c*k_c*G^d*k_d*G^e*p_e*G^f*p_f*G^g*q_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*f_b*G^b*G^c*k_c*G^d*k_d*G^e*p_e*G^f*q_f*G^g*p_g");
        assertEquals("-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*f_b*G^b*G^c*k_c*G^d*k_d*G^e*q_e*G^f*p_f*G^g*p_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*f_b*G^b*G^c*q_c*G^d*p_d*G^e*k_e*G^f*p_f*G^g*k_g");
        assertEquals("8*f^c*G^d*k^a*k^b*p_a*p_b*q_c*q_d-8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*f_b*G^b*G^c*q_c*G^d*p_d*G^e*k_e*G^f*k_f*G^g*p_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*f_b*G^b*G^c*q_c*G^d*p_d*G^e*p_e*G^f*k_f*G^g*k_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*f_b*G^b*G^c*q_c*G^d*k_d*G^e*p_e*G^f*p_f*G^g*k_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*q_a*f_b*G^b*G^c*q_c*G^d*k_d*G^e*p_e*G^f*k_f*G^g*p_g");
        assertEquals("8*f^c*G^a*k^b*k^d*p_a*p_b*q_c*q_d-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*q_a*f_b*G^b*G^c*q_c*G^d*k_d*G^e*k_e*G^f*p_f*G^g*p_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*q_c*G^d*p_d*G^e*q_e*G^f*k_f*f_g*G^g");
        assertEquals("4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d+8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d+8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d-8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*q_c*G^d*p_d*G^e*q_e*f_f*G^f*G^g*k_g");
        assertEquals("-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d-8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d-8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*q_c*G^d*p_d*G^e*k_e*G^f*q_f*f_g*G^g");
        assertEquals("-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d-8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*q_c*G^d*p_d*G^e*k_e*f_f*G^f*G^g*q_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*q_c*G^d*p_d*f_e*G^e*G^f*q_f*G^g*k_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d+8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d-8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*q_c*G^d*p_d*f_e*G^e*G^f*k_f*G^g*q_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*q_c*G^d*q_d*G^e*p_e*G^f*k_f*f_g*G^g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*q_c*G^d*q_d*G^e*p_e*f_f*G^f*G^g*k_g");
        assertEquals("2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*q_c*G^d*q_d*G^e*k_e*G^f*p_f*f_g*G^g");
        assertEquals("4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*q_c*G^d*q_d*G^e*k_e*f_f*G^f*G^g*p_g");
        assertEquals("-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*q_c*G^d*q_d*f_e*G^e*G^f*p_f*G^g*k_g");
        assertEquals("-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*q_c*G^d*q_d*f_e*G^e*G^f*k_f*G^g*p_g");
        assertEquals("2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*q_c*G^d*k_d*G^e*p_e*G^f*q_f*f_g*G^g");
        assertEquals("4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d+8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*q_c*G^d*k_d*G^e*p_e*f_f*G^f*G^g*q_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*q_c*G^d*k_d*G^e*q_e*G^f*p_f*f_g*G^g");
        assertEquals("-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d-8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*q_c*G^d*k_d*G^e*q_e*f_f*G^f*G^g*p_g");
        assertEquals("4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*q_c*G^d*k_d*f_e*G^e*G^f*p_f*G^g*q_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*q_c*G^d*k_d*f_e*G^e*G^f*q_f*G^g*p_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d+8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d-8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*q_c*f_d*G^d*G^e*p_e*G^f*q_f*G^g*k_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d-8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*q_c*f_d*G^d*G^e*p_e*G^f*k_f*G^g*q_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*q_c*f_d*G^d*G^e*q_e*G^f*p_f*G^g*k_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*q_c*f_d*G^d*G^e*q_e*G^f*k_f*G^g*p_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*q_c*f_d*G^d*G^e*k_e*G^f*p_f*G^g*q_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*q_c*f_d*G^d*G^e*k_e*G^f*q_f*G^g*p_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d-8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*p_c*G^d*q_d*G^e*q_e*G^f*k_f*f_g*G^g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*p_c*G^d*q_d*G^e*q_e*f_f*G^f*G^g*k_g");
        assertEquals("2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*p_c*G^d*q_d*G^e*k_e*G^f*q_f*f_g*G^g");
        assertEquals("4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*p_c*G^d*q_d*G^e*k_e*f_f*G^f*G^g*q_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*p_c*G^d*q_d*f_e*G^e*G^f*q_f*G^g*k_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*p_c*G^d*q_d*f_e*G^e*G^f*k_f*G^g*q_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*p_c*G^d*k_d*G^e*q_e*G^f*q_f*f_g*G^g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*p_c*G^d*k_d*G^e*q_e*f_f*G^f*G^g*q_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*p_c*G^d*k_d*f_e*G^e*G^f*q_f*G^g*q_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*p_c*f_d*G^d*G^e*q_e*G^f*q_f*G^g*k_g");
        assertEquals("2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*p_c*f_d*G^d*G^e*q_e*G^f*k_f*G^g*q_g");
        assertEquals("4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*p_c*f_d*G^d*G^e*k_e*G^f*q_f*G^g*q_g");
        assertEquals("2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*k_c*G^d*q_d*G^e*p_e*G^f*q_f*f_g*G^g");
        assertEquals("-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d-8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*k_c*G^d*q_d*G^e*p_e*f_f*G^f*G^g*q_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*k_c*G^d*q_d*G^e*q_e*G^f*p_f*f_g*G^g");
        assertEquals("4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*k_c*G^d*q_d*G^e*q_e*f_f*G^f*G^g*p_g");
        assertEquals("-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*k_c*G^d*q_d*f_e*G^e*G^f*p_f*G^g*q_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*k_c*G^d*q_d*f_e*G^e*G^f*q_f*G^g*p_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*k_c*G^d*p_d*G^e*q_e*G^f*q_f*f_g*G^g");
        assertEquals("4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*k_c*G^d*p_d*G^e*q_e*f_f*G^f*G^g*q_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*k_c*G^d*p_d*f_e*G^e*G^f*q_f*G^g*q_g");
        assertEquals("4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*k_c*f_d*G^d*G^e*q_e*G^f*p_f*G^g*q_g");
        assertEquals("-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*k_c*f_d*G^d*G^e*q_e*G^f*q_f*G^g*p_g");
        assertEquals("-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*G^c*k_c*f_d*G^d*G^e*p_e*G^f*q_f*G^g*q_g");
        assertEquals("-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*f_c*G^c*G^d*q_d*G^e*p_e*G^f*q_f*G^g*k_g");
        assertEquals("-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d+8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d-8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*f_c*G^c*G^d*q_d*G^e*p_e*G^f*k_f*G^g*q_g");
        assertEquals("4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*f_c*G^c*G^d*q_d*G^e*q_e*G^f*p_f*G^g*k_g");
        assertEquals("-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*f_c*G^c*G^d*q_d*G^e*q_e*G^f*k_f*G^g*p_g");
        assertEquals("2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*f_c*G^c*G^d*q_d*G^e*k_e*G^f*p_f*G^g*q_g");
        assertEquals("-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*f_c*G^c*G^d*q_d*G^e*k_e*G^f*q_f*G^g*p_g");
        assertEquals("4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d-8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*f_c*G^c*G^d*p_d*G^e*q_e*G^f*q_f*G^g*k_g");
        assertEquals("-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*f_c*G^c*G^d*p_d*G^e*q_e*G^f*k_f*G^g*q_g");
        assertEquals("-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*f_c*G^c*G^d*p_d*G^e*k_e*G^f*q_f*G^g*q_g");
        assertEquals("-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*f_c*G^c*G^d*k_d*G^e*q_e*G^f*p_f*G^g*q_g");
        assertEquals("4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*f_c*G^c*G^d*k_d*G^e*q_e*G^f*q_f*G^g*p_g");
        assertEquals("2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*p_b*f_c*G^c*G^d*k_d*G^e*p_e*G^f*q_f*G^g*q_g");
        assertEquals("2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*p_c*G^d*p_d*G^e*q_e*G^f*k_f*f_g*G^g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*p_c*G^d*p_d*G^e*q_e*f_f*G^f*G^g*k_g");
        assertEquals("2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*p_c*G^d*p_d*G^e*k_e*G^f*q_f*f_g*G^g");
        assertEquals("4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*p_c*G^d*p_d*G^e*k_e*f_f*G^f*G^g*q_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*p_c*G^d*p_d*f_e*G^e*G^f*q_f*G^g*k_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*p_c*G^d*p_d*f_e*G^e*G^f*k_f*G^g*q_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*p_c*G^d*q_d*G^e*p_e*G^f*k_f*f_g*G^g");
        assertEquals("4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d-8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d-8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*p_c*G^d*q_d*G^e*p_e*f_f*G^f*G^g*k_g");
        assertEquals("8*f^c*G^d*k_c*k_d*p^a*p^b*q_a*q_b-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d+8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d+8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d-8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*p_c*G^d*q_d*G^e*k_e*G^f*p_f*f_g*G^g");
        assertEquals("-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d-8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*p_c*G^d*q_d*G^e*k_e*f_f*G^f*G^g*p_g");
        assertEquals("4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*p_c*G^d*q_d*f_e*G^e*G^f*p_f*G^g*k_g");
        assertEquals("-8*f^c*G^d*k_c*k_d*p^a*p^b*q_a*q_b+4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d-8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*p_c*G^d*q_d*f_e*G^e*G^f*k_f*G^g*p_g");
        assertEquals("8*f^c*G^d*k_c*k_d*p^a*p^b*q_a*q_b-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*p_c*G^d*k_d*G^e*p_e*G^f*q_f*f_g*G^g");
        assertEquals("-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d-8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*p_c*G^d*k_d*G^e*p_e*f_f*G^f*G^g*q_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*p_c*G^d*k_d*G^e*q_e*G^f*p_f*f_g*G^g");
        assertEquals("4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*p_c*G^d*k_d*G^e*q_e*f_f*G^f*G^g*p_g");
        assertEquals("-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d-8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*p_c*G^d*k_d*f_e*G^e*G^f*p_f*G^g*q_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*p_c*G^d*k_d*f_e*G^e*G^f*q_f*G^g*p_g");
        assertEquals("4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d-8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*p_c*f_d*G^d*G^e*p_e*G^f*q_f*G^g*k_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*p_c*f_d*G^d*G^e*p_e*G^f*k_f*G^g*q_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*p_c*f_d*G^d*G^e*q_e*G^f*p_f*G^g*k_g");
        assertEquals("8*f^c*G^d*k_c*k_d*p^a*p^b*q_a*q_b-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d+8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d-8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*p_c*f_d*G^d*G^e*q_e*G^f*k_f*G^g*p_g");
        assertEquals("-8*f^c*G^d*k_c*k_d*p^a*p^b*q_a*q_b+4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*p_c*f_d*G^d*G^e*k_e*G^f*p_f*G^g*q_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*p_c*f_d*G^d*G^e*k_e*G^f*q_f*G^g*p_g");
        assertEquals("8*f^c*G^d*k_c*k_d*p^a*p^b*q_a*q_b-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d+8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d-8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*q_c*G^d*p_d*G^e*p_e*G^f*k_f*f_g*G^g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*q_c*G^d*p_d*G^e*p_e*f_f*G^f*G^g*k_g");
        assertEquals("2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*q_c*G^d*p_d*G^e*k_e*G^f*p_f*f_g*G^g");
        assertEquals("4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*q_c*G^d*p_d*G^e*k_e*f_f*G^f*G^g*p_g");
        assertEquals("-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*q_c*G^d*p_d*f_e*G^e*G^f*p_f*G^g*k_g");
        assertEquals("-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+4*f^b*G^a*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*q_c*G^d*p_d*f_e*G^e*G^f*k_f*G^g*p_g");
        assertEquals("2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*q_c*G^d*k_d*G^e*p_e*G^f*p_f*f_g*G^g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*q_c*G^d*k_d*G^e*p_e*f_f*G^f*G^g*p_g");
        assertEquals("2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*q_c*G^d*k_d*f_e*G^e*G^f*p_f*G^g*p_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*q_c*f_d*G^d*G^e*p_e*G^f*p_f*G^g*k_g");
        assertEquals("2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*q_c*f_d*G^d*G^e*p_e*G^f*k_f*G^g*p_g");
        assertEquals("4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*q_c*f_d*G^d*G^e*k_e*G^f*p_f*G^g*p_g");
        assertEquals("2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*k_c*G^d*p_d*G^e*p_e*G^f*q_f*f_g*G^g");
        assertEquals("4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*k_c*G^d*p_d*G^e*p_e*f_f*G^f*G^g*q_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*k_c*G^d*p_d*G^e*q_e*G^f*p_f*f_g*G^g");
        assertEquals("-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d-8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*k_c*G^d*p_d*G^e*q_e*f_f*G^f*G^g*p_g");
        assertEquals("4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*k_c*G^d*p_d*f_e*G^e*G^f*p_f*G^g*q_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*k_c*G^d*p_d*f_e*G^e*G^f*q_f*G^g*p_g");
        assertEquals("-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d-8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*k_c*G^d*q_d*G^e*p_e*G^f*p_f*f_g*G^g");
        assertEquals("4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*k_c*G^d*q_d*G^e*p_e*f_f*G^f*G^g*p_g");
        assertEquals("-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+8*f^b*G^a*k_a*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*k_c*G^d*q_d*f_e*G^e*G^f*p_f*G^g*p_g");
        assertEquals("4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*k_c*f_d*G^d*G^e*p_e*G^f*p_f*G^g*q_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*k_c*f_d*G^d*G^e*p_e*G^f*q_f*G^g*p_g");
        assertEquals("4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*G^c*k_c*f_d*G^d*G^e*q_e*G^f*p_f*G^g*p_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*f_c*G^c*G^d*p_d*G^e*p_e*G^f*q_f*G^g*k_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*f_c*G^c*G^d*p_d*G^e*p_e*G^f*k_f*G^g*q_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*f_c*G^c*G^d*p_d*G^e*q_e*G^f*p_f*G^g*k_g");
        assertEquals("-8*f^c*G^d*k_c*k_d*p^a*p^b*q_a*q_b+4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d-8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*f_c*G^c*G^d*p_d*G^e*q_e*G^f*k_f*G^g*p_g");
        assertEquals("8*f^c*G^d*k_c*k_d*p^a*p^b*q_a*q_b-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d-8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*f_c*G^c*G^d*p_d*G^e*k_e*G^f*p_f*G^g*q_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*f_c*G^c*G^d*p_d*G^e*k_e*G^f*q_f*G^g*p_g");
        assertEquals("-8*f^c*G^d*k_c*k_d*p^a*p^b*q_a*q_b+4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*f_c*G^c*G^d*q_d*G^e*p_e*G^f*p_f*G^g*k_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*f_c*G^c*G^d*q_d*G^e*p_e*G^f*k_f*G^g*p_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d+8*f^c*G^a*k_a*k^b*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^e*k^d*p_d*q_e-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*f_c*G^c*G^d*q_d*G^e*k_e*G^f*p_f*G^g*p_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^a*k_a*k^d*p_b*p^b*q_c*q_d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*f_c*G^c*G^d*k_d*G^e*p_e*G^f*p_f*G^g*q_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*f_c*G^c*G^d*k_d*G^e*p_e*G^f*q_f*G^g*p_g");
        assertEquals("8*f^c*G^d*k_c*k_d*p^a*p^b*q_a*q_b-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*q_b*f_c*G^c*G^d*k_d*G^e*q_e*G^f*p_f*G^g*p_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*k_b*G^c*p_c*G^d*q_d*G^e*p_e*G^f*q_f*f_g*G^g");
        assertEquals("4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*k_b*G^c*p_c*G^d*q_d*G^e*p_e*f_f*G^f*G^g*q_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*k_b*G^c*p_c*G^d*q_d*G^e*q_e*G^f*p_f*f_g*G^g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*k_b*G^c*p_c*G^d*q_d*G^e*q_e*f_f*G^f*G^g*p_g");
        assertEquals("2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*k_b*G^c*p_c*G^d*q_d*f_e*G^e*G^f*p_f*G^g*q_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*k_b*G^c*p_c*G^d*q_d*f_e*G^e*G^f*q_f*G^g*p_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*k_b*G^c*p_c*G^d*p_d*G^e*q_e*G^f*q_f*f_g*G^g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*k_b*G^c*p_c*G^d*p_d*G^e*q_e*f_f*G^f*G^g*q_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*k_b*G^c*p_c*G^d*p_d*f_e*G^e*G^f*q_f*G^g*q_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*k_b*G^c*p_c*f_d*G^d*G^e*q_e*G^f*p_f*G^g*q_g");
        assertEquals("4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*k_b*G^c*p_c*f_d*G^d*G^e*q_e*G^f*q_f*G^g*p_g");
        assertEquals("2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*k_b*G^c*p_c*f_d*G^d*G^e*p_e*G^f*q_f*G^g*q_g");
        assertEquals("2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*k_b*G^c*q_c*G^d*p_d*G^e*p_e*G^f*q_f*f_g*G^g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*k_b*G^c*q_c*G^d*p_d*G^e*p_e*f_f*G^f*G^g*q_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*k_b*G^c*q_c*G^d*p_d*G^e*q_e*G^f*p_f*f_g*G^g");
        assertEquals("4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*k_b*G^c*q_c*G^d*p_d*G^e*q_e*f_f*G^f*G^g*p_g");
        assertEquals("-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*k_b*G^c*q_c*G^d*p_d*f_e*G^e*G^f*p_f*G^g*q_g");
        assertEquals("-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^b*G^c*k_a*k^a*p_b*p^d*q_c*q_d-2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*k_b*G^c*q_c*G^d*p_d*f_e*G^e*G^f*q_f*G^g*p_g");
        assertEquals("4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*k_b*G^c*q_c*G^d*q_d*G^e*p_e*G^f*p_f*f_g*G^g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*k_b*G^c*q_c*G^d*q_d*G^e*p_e*f_f*G^f*G^g*p_g");
        assertEquals("2*f^b*G^c*k_a*k^a*p_b*p_c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*k_b*G^c*q_c*G^d*q_d*f_e*G^e*G^f*p_f*G^g*p_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*k_b*G^c*q_c*f_d*G^d*G^e*p_e*G^f*p_f*G^g*q_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*k_b*G^c*q_c*f_d*G^d*G^e*p_e*G^f*q_f*G^g*p_g");
        assertEquals("-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d+4*f^c*G^b*k_a*k^a*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*k_b*G^c*q_c*f_d*G^d*G^e*q_e*G^f*p_f*G^g*p_g");
        assertEquals("2*f^c*G^d*k_a*k^a*p_b*p^b*q_c*q_d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*k_b*f_c*G^c*G^d*p_d*G^e*q_e*G^f*p_f*G^g*q_g");
        assertEquals("2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*k_b*f_c*G^c*G^d*p_d*G^e*q_e*G^f*q_f*G^g*p_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*k_b*f_c*G^c*G^d*p_d*G^e*p_e*G^f*q_f*G^g*q_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*k_b*f_c*G^c*G^d*q_d*G^e*p_e*G^f*p_f*G^g*q_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*k_b*f_c*G^c*G^d*q_d*G^e*p_e*G^f*q_f*G^g*p_g");
        assertEquals("4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*G^b*k_b*f_c*G^c*G^d*q_d*G^e*q_e*G^f*p_f*G^g*p_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*f_b*G^b*G^c*p_c*G^d*q_d*G^e*p_e*G^f*q_f*G^g*k_g");
        assertEquals("-8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*f_b*G^b*G^c*p_c*G^d*q_d*G^e*p_e*G^f*k_f*G^g*q_g");
        assertEquals("-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*f_b*G^b*G^c*p_c*G^d*q_d*G^e*q_e*G^f*p_f*G^g*k_g");
        assertEquals("2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*f_b*G^b*G^c*p_c*G^d*q_d*G^e*q_e*G^f*k_f*G^g*p_g");
        assertEquals("4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*f_b*G^b*G^c*p_c*G^d*q_d*G^e*k_e*G^f*p_f*G^g*q_g");
        assertEquals("4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*f_b*G^b*G^c*p_c*G^d*q_d*G^e*k_e*G^f*q_f*G^g*p_g");
        assertEquals("-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*f_b*G^b*G^c*p_c*G^d*p_d*G^e*q_e*G^f*q_f*G^g*k_g");
        assertEquals("2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*f_b*G^b*G^c*p_c*G^d*p_d*G^e*q_e*G^f*k_f*G^g*q_g");
        assertEquals("4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*f_b*G^b*G^c*p_c*G^d*p_d*G^e*k_e*G^f*q_f*G^g*q_g");
        assertEquals("2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*f_b*G^b*G^c*p_c*G^d*k_d*G^e*q_e*G^f*p_f*G^g*q_g");
        assertEquals("8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*f_b*G^b*G^c*p_c*G^d*k_d*G^e*q_e*G^f*q_f*G^g*p_g");
        assertEquals("4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*f_b*G^b*G^c*p_c*G^d*k_d*G^e*p_e*G^f*q_f*G^g*q_g");
        assertEquals("4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*f_b*G^b*G^c*q_c*G^d*p_d*G^e*p_e*G^f*q_f*G^g*k_g");
        assertEquals("2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*f_b*G^b*G^c*q_c*G^d*p_d*G^e*p_e*G^f*k_f*G^g*q_g");
        assertEquals("4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*f_b*G^b*G^c*q_c*G^d*p_d*G^e*q_e*G^f*p_f*G^g*k_g");
        assertEquals("8*f^c*G^d*k_c*k_d*p^a*p^b*q_a*q_b-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d-8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*f_b*G^b*G^c*q_c*G^d*p_d*G^e*q_e*G^f*k_f*G^g*p_g");
        assertEquals("-8*f^c*G^d*k_c*k_d*p^a*p^b*q_a*q_b+4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*f_b*G^b*G^c*q_c*G^d*p_d*G^e*k_e*G^f*p_f*G^g*q_g");
        assertEquals("-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+8*f^a*G^c*k_a*k^b*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e-4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*f_b*G^b*G^c*q_c*G^d*p_d*G^e*k_e*G^f*q_f*G^g*p_g");
        assertEquals("8*f^c*G^d*k_c*k_d*p^a*p^b*q_a*q_b-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e+4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*f_b*G^b*G^c*q_c*G^d*q_d*G^e*p_e*G^f*p_f*G^g*k_g");
        assertEquals("2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*f_b*G^b*G^c*q_c*G^d*q_d*G^e*p_e*G^f*k_f*G^g*p_g");
        assertEquals("4*f^a*G^b*k_a*k^c*p_b*p_c*q_d*q^d-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("G^a*k_a*f_b*G^b*G^c*q_c*G^d*q_d*G^e*k_e*G^f*p_f*G^g*p_g");
        assertEquals("2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*f_b*G^b*G^c*q_c*G^d*k_d*G^e*p_e*G^f*p_f*G^g*q_g");
        assertEquals("4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*f_b*G^b*G^c*q_c*G^d*k_d*G^e*p_e*G^f*q_f*G^g*p_g");
        assertEquals("-8*f^c*G^d*k_c*k_d*p^a*p^b*q_a*q_b+4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d+8*f^a*G^b*k_a*k^c*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e+2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*f_b*G^b*G^c*q_c*G^d*k_d*G^e*q_e*G^f*p_f*G^g*p_g");
        assertEquals("4*f^a*G^c*k_a*k^d*p_b*p^b*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*f_b*G^b*G^c*k_c*G^d*p_d*G^e*q_e*G^f*p_f*G^g*q_g");
        assertEquals("4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*f_b*G^b*G^c*k_c*G^d*p_d*G^e*q_e*G^f*q_f*G^g*p_g");
        assertEquals("2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*f_b*G^b*G^c*k_c*G^d*p_d*G^e*p_e*G^f*q_f*G^g*q_g");
        assertEquals("2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*f_b*G^b*G^c*k_c*G^d*q_d*G^e*p_e*G^f*p_f*G^g*q_g");
        assertEquals("2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*f_b*G^b*G^c*k_c*G^d*q_d*G^e*p_e*G^f*q_f*G^g*p_g");
        assertEquals("8*f^c*G^d*k_c*k_d*p^a*p^b*q_a*q_b-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-4*G^a*k_a*G^b*p_b*G^c*q_c*f^d*k_d*p^e*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("G^a*k_a*f_b*G^b*G^c*k_c*G^d*q_d*G^e*q_e*G^f*p_f*G^g*p_g");
        assertEquals("2*f^a*G^b*k_a*k_b*p_c*p^c*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*p_b*G^c*q_c*G^d*k_d*G^e*p_e*G^f*q_f*G^g*k_g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e+4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("f_a*G^a*G^b*p_b*G^c*q_c*G^d*k_d*G^e*p_e*G^f*k_f*G^g*q_g");
        assertEquals("4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("f_a*G^a*G^b*p_b*G^c*q_c*G^d*k_d*G^e*q_e*G^f*p_f*G^g*k_g");
        assertEquals("-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("f_a*G^a*G^b*p_b*G^c*q_c*G^d*k_d*G^e*q_e*G^f*k_f*G^g*p_g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*p_b*G^c*q_c*G^d*k_d*G^e*k_e*G^f*p_f*G^g*q_g");
        assertEquals("2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*p_b*G^c*q_c*G^d*k_d*G^e*k_e*G^f*q_f*G^g*p_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*p_b*G^c*q_c*G^d*p_d*G^e*k_e*G^f*q_f*G^g*k_g");
        assertEquals("-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*p_b*G^c*q_c*G^d*p_d*G^e*k_e*G^f*k_f*G^g*q_g");
        assertEquals("2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*p_b*G^c*q_c*G^d*p_d*G^e*q_e*G^f*k_f*G^g*k_g");
        assertEquals("2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*p_b*G^c*q_c*G^d*q_d*G^e*k_e*G^f*p_f*G^g*k_g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("f_a*G^a*G^b*p_b*G^c*q_c*G^d*q_d*G^e*k_e*G^f*k_f*G^g*p_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*p_b*G^c*q_c*G^d*q_d*G^e*p_e*G^f*k_f*G^g*k_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*p_b*G^c*k_c*G^d*q_d*G^e*p_e*G^f*q_f*G^g*k_g");
        assertEquals("8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("f_a*G^a*G^b*p_b*G^c*k_c*G^d*q_d*G^e*p_e*G^f*k_f*G^g*q_g");
        assertEquals("-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("f_a*G^a*G^b*p_b*G^c*k_c*G^d*q_d*G^e*q_e*G^f*p_f*G^g*k_g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("f_a*G^a*G^b*p_b*G^c*k_c*G^d*q_d*G^e*q_e*G^f*k_f*G^g*p_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*p_b*G^c*k_c*G^d*q_d*G^e*k_e*G^f*p_f*G^g*q_g");
        assertEquals("4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*p_b*G^c*k_c*G^d*q_d*G^e*k_e*G^f*q_f*G^g*p_g");
        assertEquals("8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*p_b*G^c*k_c*G^d*p_d*G^e*q_e*G^f*q_f*G^g*k_g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("f_a*G^a*G^b*p_b*G^c*k_c*G^d*p_d*G^e*q_e*G^f*k_f*G^g*q_g");
        assertEquals("4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("f_a*G^a*G^b*p_b*G^c*k_c*G^d*p_d*G^e*k_e*G^f*q_f*G^g*q_g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("f_a*G^a*G^b*p_b*G^c*k_c*G^d*k_d*G^e*q_e*G^f*p_f*G^g*q_g");
        assertEquals("2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*p_b*G^c*k_c*G^d*k_d*G^e*q_e*G^f*q_f*G^g*p_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*p_b*G^c*k_c*G^d*k_d*G^e*p_e*G^f*q_f*G^g*q_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*p_b*G^c*p_c*G^d*q_d*G^e*k_e*G^f*q_f*G^g*k_g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*p_b*G^c*p_c*G^d*q_d*G^e*k_e*G^f*k_f*G^g*q_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*p_b*G^c*p_c*G^d*q_d*G^e*q_e*G^f*k_f*G^g*k_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*p_b*G^c*p_c*G^d*k_d*G^e*q_e*G^f*q_f*G^g*k_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*p_b*G^c*p_c*G^d*k_d*G^e*q_e*G^f*k_f*G^g*q_g");
        assertEquals("2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*p_b*G^c*p_c*G^d*k_d*G^e*k_e*G^f*q_f*G^g*q_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*q_b*G^c*p_c*G^d*k_d*G^e*p_e*G^f*q_f*G^g*k_g");
        assertEquals("-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("f_a*G^a*G^b*q_b*G^c*p_c*G^d*k_d*G^e*p_e*G^f*k_f*G^g*q_g");
        assertEquals("-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("f_a*G^a*G^b*q_b*G^c*p_c*G^d*k_d*G^e*q_e*G^f*p_f*G^g*k_g");
        assertEquals("4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("f_a*G^a*G^b*q_b*G^c*p_c*G^d*k_d*G^e*q_e*G^f*k_f*G^g*p_g");
        assertEquals("-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*q_b*G^c*p_c*G^d*k_d*G^e*k_e*G^f*p_f*G^g*q_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*q_b*G^c*p_c*G^d*k_d*G^e*k_e*G^f*q_f*G^g*p_g");
        assertEquals("4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*q_b*G^c*p_c*G^d*p_d*G^e*k_e*G^f*q_f*G^g*k_g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*q_b*G^c*p_c*G^d*p_d*G^e*k_e*G^f*k_f*G^g*q_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*q_b*G^c*p_c*G^d*p_d*G^e*q_e*G^f*k_f*G^g*k_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*q_b*G^c*p_c*G^d*q_d*G^e*k_e*G^f*p_f*G^g*k_g");
        assertEquals("-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e-4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("f_a*G^a*G^b*q_b*G^c*p_c*G^d*q_d*G^e*k_e*G^f*k_f*G^g*p_g");
        assertEquals("4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*q_b*G^c*p_c*G^d*q_d*G^e*p_e*G^f*k_f*G^g*k_g");
        assertEquals("4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*q_b*G^c*k_c*G^d*p_d*G^e*p_e*G^f*q_f*G^g*k_g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*q_b*G^c*k_c*G^d*p_d*G^e*p_e*G^f*k_f*G^g*q_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*q_b*G^c*k_c*G^d*p_d*G^e*q_e*G^f*p_f*G^g*k_g");
        assertEquals("-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*q_b*G^c*k_c*G^d*p_d*G^e*q_e*G^f*k_f*G^g*p_g");
        assertEquals("4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d+4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("f_a*G^a*G^b*q_b*G^c*k_c*G^d*p_d*G^e*k_e*G^f*p_f*G^g*q_g");
        assertEquals("4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("f_a*G^a*G^b*q_b*G^c*k_c*G^d*p_d*G^e*k_e*G^f*q_f*G^g*p_g");
        assertEquals("-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("f_a*G^a*G^b*q_b*G^c*k_c*G^d*q_d*G^e*p_e*G^f*p_f*G^g*k_g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*q_b*G^c*k_c*G^d*q_d*G^e*p_e*G^f*k_f*G^g*p_g");
        assertEquals("-4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b+8*f_a*G^a*k^b*k^c*p_b*p^d*q_c*q_d-4*f_a*G^a*G^b*p_b*G^c*q_c*k^d*k^e*p_d*q_e+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("f_a*G^a*G^b*q_b*G^c*k_c*G^d*q_d*G^e*k_e*G^f*p_f*G^g*p_g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_d*p^d*q_a*q_b-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*q_b*G^c*k_c*G^d*k_d*G^e*p_e*G^f*p_f*G^g*q_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*q_b*G^c*k_c*G^d*k_d*G^e*p_e*G^f*q_f*G^g*p_g");
        assertEquals("4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*q_b*G^c*k_c*G^d*k_d*G^e*q_e*G^f*p_f*G^g*p_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*q_b*G^c*q_c*G^d*p_d*G^e*k_e*G^f*p_f*G^g*k_g");
        assertEquals("4*f_c*G^c*k^a*k^b*p_a*p_b*q_d*q^d-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("f_a*G^a*G^b*q_b*G^c*q_c*G^d*p_d*G^e*k_e*G^f*k_f*G^g*p_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*q_b*G^c*q_c*G^d*p_d*G^e*p_e*G^f*k_f*G^g*k_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*q_b*G^c*q_c*G^d*k_d*G^e*p_e*G^f*p_f*G^g*k_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*q_b*G^c*q_c*G^d*k_d*G^e*p_e*G^f*k_f*G^g*p_g");
        assertEquals("-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("f_a*G^a*G^b*q_b*G^c*q_c*G^d*k_d*G^e*k_e*G^f*p_f*G^g*p_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*k_b*G^c*p_c*G^d*q_d*G^e*p_e*G^f*q_f*G^g*k_g");
        assertEquals("2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*k_b*G^c*p_c*G^d*q_d*G^e*p_e*G^f*k_f*G^g*q_g");
        assertEquals("-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*k_b*G^c*p_c*G^d*q_d*G^e*q_e*G^f*p_f*G^g*k_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*k_b*G^c*p_c*G^d*q_d*G^e*q_e*G^f*k_f*G^g*p_g");
        assertEquals("-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("f_a*G^a*G^b*k_b*G^c*p_c*G^d*q_d*G^e*k_e*G^f*p_f*G^g*q_g");
        assertEquals("2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("f_a*G^a*G^b*k_b*G^c*p_c*G^d*q_d*G^e*k_e*G^f*q_f*G^g*p_g");
        assertEquals("-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("f_a*G^a*G^b*k_b*G^c*p_c*G^d*p_d*G^e*q_e*G^f*q_f*G^g*k_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*k_b*G^c*p_c*G^d*p_d*G^e*q_e*G^f*k_f*G^g*q_g");
        assertEquals("2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*k_b*G^c*p_c*G^d*p_d*G^e*k_e*G^f*q_f*G^g*q_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*k_b*G^c*p_c*G^d*k_d*G^e*q_e*G^f*p_f*G^g*q_g");
        assertEquals("-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("f_a*G^a*G^b*k_b*G^c*p_c*G^d*k_d*G^e*q_e*G^f*q_f*G^g*p_g");
        assertEquals("-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("f_a*G^a*G^b*k_b*G^c*p_c*G^d*k_d*G^e*p_e*G^f*q_f*G^g*q_g");
        assertEquals("-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("f_a*G^a*G^b*k_b*G^c*q_c*G^d*p_d*G^e*p_e*G^f*q_f*G^g*k_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*k_b*G^c*q_c*G^d*p_d*G^e*p_e*G^f*k_f*G^g*q_g");
        assertEquals("2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*k_b*G^c*q_c*G^d*p_d*G^e*q_e*G^f*p_f*G^g*k_g");
        assertEquals("4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*k_b*G^c*q_c*G^d*p_d*G^e*q_e*G^f*k_f*G^g*p_g");
        assertEquals("-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("f_a*G^a*G^b*k_b*G^c*q_c*G^d*p_d*G^e*k_e*G^f*p_f*G^g*q_g");
        assertEquals("-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+4*f_a*G^a*G^b*k_b*G^c*q_c*k^d*p_d*p^e*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d-2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("f_a*G^a*G^b*k_b*G^c*q_c*G^d*p_d*G^e*k_e*G^f*q_f*G^g*p_g");
        assertEquals("4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b+2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("f_a*G^a*G^b*k_b*G^c*q_c*G^d*q_d*G^e*p_e*G^f*p_f*G^g*k_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*k_b*G^c*q_c*G^d*q_d*G^e*p_e*G^f*k_f*G^g*p_g");
        assertEquals("-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d+2*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p_d*q_e*q^e", ds.transform(t));
        t = parse("f_a*G^a*G^b*k_b*G^c*q_c*G^d*q_d*G^e*k_e*G^f*p_f*G^g*p_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*k_b*G^c*q_c*G^d*k_d*G^e*p_e*G^f*p_f*G^g*q_g");
        assertEquals("2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*k_b*G^c*q_c*G^d*k_d*G^e*p_e*G^f*q_f*G^g*p_g");
        assertEquals("-4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e+2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e+4*f_a*G^a*G^b*k_b*G^c*p_c*k^d*p^e*q_d*q_e+f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*k_b*G^c*q_c*G^d*k_d*G^e*q_e*G^f*p_f*G^g*p_g");
        assertEquals("2*f_a*G^a*G^b*k_b*G^c*q_c*k^e*p_d*p^d*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*k_b*G^c*k_c*G^d*p_d*G^e*q_e*G^f*p_f*G^g*q_g");
        assertEquals("2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*k_b*G^c*k_c*G^d*p_d*G^e*q_e*G^f*q_f*G^g*p_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*k_b*G^c*k_c*G^d*p_d*G^e*p_e*G^f*q_f*G^g*q_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*k_b*G^c*k_c*G^d*q_d*G^e*p_e*G^f*p_f*G^g*q_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*k_b*G^c*k_c*G^d*q_d*G^e*p_e*G^f*q_f*G^g*p_g");
        assertEquals("4*f_c*G^c*k_d*k^d*p^a*p^b*q_a*q_b-2*f_a*G^a*G^b*p_b*G^c*q_c*k_d*k^d*p^e*q_e-f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
        t = parse("f_a*G^a*G^b*k_b*G^c*k_c*G^d*q_d*G^e*q_e*G^f*p_f*G^g*p_g");
        assertEquals("f_a*G^a*k_b*k^b*p_c*p^c*q_d*q^d", ds.transform(t));
//
//
//        int[] a = list.toArray();
//        Object[][] els = co.toArray(new Object[co.size()][]);
//        ArraysUtils.quickSort(a, els);
//
//        for (int i = 0; i < a.length; ++i) {
//            System.out.println(a[i]);
//            System.out.println(Arrays.toString(els[i]));
//        }
    }

//    static IntArrayList list = new IntArrayList();
//    static ArrayList<Object[]> co = new ArrayList<>();

    private static void assertEquals(String a, Tensor b) {
        Tensor at = parse(a);
        if (at.getIndices().size(IndexType.Matrix1) == 0)
            at = expandAndEliminate(multiplyAndRenameConflictingDummies(parse("d^a'_b'"), at));
//        try {
        TAssert.assertEquals(at, b);
//        } catch (AssertionError err) {
//            list.add(a.length());
//            co.add(new Object[]{err.getStackTrace()[4], b});
////            System.out.println(a.length());
////            System.out.println(err.getStackTrace()[4]);
//        }
    }
}